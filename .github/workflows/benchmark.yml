name: Benchmark weights

on:
  workflow_dispatch:
  pull_request:
    types: [ labeled ]

env:
  CARGO_TERM_COLOR: always

jobs:
  benchmark: 
    name: Benchmark weights
    if: (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 's:benchmark-required')) || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Prepare output
        id: prepare
        run: |
          BENCHMARK_LOG="Pallet: 'zrml_orderbook_v1', Extrinsic: 'cancel_order_ask', Lowest values: [], Highest values: [], Steps: [0], Repeat: 1000
          Median Slopes Analysis
          --------
          -- Extrinsic Time --

          Model:
          Time ~=     57.5
                        µs

          Reads = 3
          Writes = 3

          Min Squares Analysis
          --------
          -- Extrinsic Time --

          Model:
          Time ~=     57.5
                        µs

          Reads = 3
          Writes = 3

          Pallet: 'zrml_orderbook_v1', Extrinsic: 'cancel_order_bid', Lowest values: [], Highest values: [], Steps: [0], Repeat: 1000
          Median Slopes Analysis
          --------
          -- Extrinsic Time --

          Model:
          Time ~=     77.7
                        µs

          Reads = 2
          Writes = 2

          Min Squares Analysis
          --------
          -- Extrinsic Time --

          Model:
          Time ~=     77.7
                        µs

          Reads = 2
          Writes = 2"
          BENCHMARK_LOG="${BENCHMARK_LOG//'%'/'%25'}"
          BENCHMARK_LOG="${BENCHMARK_LOG//$'\n'/'%0A'}"
          BENCHMARK_LOG="${BENCHMARK_LOG//$'\r'/'%0D'}"
          echo "::set-output name=RESULT::$BENCHMARK_LOG"
      - name: Comment PR (on success)
        uses: thollander/actions-comment-pull-request@master
        with:
          message: 'Benchmark completed successfully.
          <details>
          <summary>
          Results
          </summary>
          
          ${{ steps.prepare.outputs.RESULT }}
          
          </details>'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
[[bin]]
name = "zeitgeist"
path = "./src/main.rs"

[build-dependencies]
substrate-build-script-utils = { workspace = true }

[dependencies]
pallet-asset-tx-payment = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
sc-basic-authorship = { workspace = true }
sc-cli = { workspace = true, features = ["wasmtime"] }
sc-client-api = { workspace = true }
sc-consensus = { workspace = true }
sc-executor = { workspace = true, features = ["wasmtime"] }
sc-keystore = { workspace = true }
sc-rpc = { workspace = true }
sc-rpc-api = { workspace = true }
sc-service = { workspace = true, features = ["wasmtime"] }
sc-sysinfo = { workspace = true }
sc-telemetry = { workspace = true }
sc-transaction-pool = { workspace = true }
sc-transaction-pool-api = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-blockchain = { workspace = true }
sp-consensus = { workspace = true }
sp-core = { workspace = true }
sp-inherents = { workspace = true }
sp-keyring = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-storage = { workspace = true }
sp-timestamp = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-trie = { workspace = true }
substrate-frame-rpc-system = { workspace = true }

# Try-Runtime

try-runtime-cli = { workspace = true, optional = true }

# Benchmark

frame-benchmarking = { workspace = true, optional = true }
frame-benchmarking-cli = { workspace = true }

# Cumulus

cumulus-client-cli = { workspace = true, optional = true }
cumulus-client-collator = { workspace = true, optional = true }
cumulus-client-consensus-common = { workspace = true, optional = true }
cumulus-client-consensus-relay-chain = { workspace = true, optional = true }
cumulus-client-network = { workspace = true, optional = true }
cumulus-client-service = { workspace = true, optional = true }
cumulus-primitives-core = { workspace = true, optional = true }
cumulus-primitives-parachain-inherent = { workspace = true, optional = true }
cumulus-relay-chain-inprocess-interface = { workspace = true, optional = true }
cumulus-relay-chain-interface = { workspace = true, optional = true }
cumulus-relay-chain-minimal-node = { workspace = true, optional = true }
cumulus-relay-chain-rpc-interface = { workspace = true, optional = true }

# Parachain

moonbeam-vrf = { workspace = true, optional = true }
nimbus-consensus = { workspace = true, optional = true }
nimbus-primitives = { workspace = true, optional = true }
pallet-author-inherent = { workspace = true, optional = true }
pallet-parachain-staking = { workspace = true, optional = true }
parity-scale-codec = { workspace = true, optional = true }
sc-chain-spec = { workspace = true, optional = true }
sc-network = { workspace = true, optional = true }
sc-network-common = { workspace = true, optional = true }
sc-tracing = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
session-keys-primitives = { workspace = true, optional = true }
sp-keystore = { workspace = true, optional = true }
substrate-prometheus-endpoint = { workspace = true, optional = true }

# Polkadot

polkadot-cli = { workspace = true, optional = true }
polkadot-parachain = { workspace = true, optional = true }
polkadot-primitives = { workspace = true, optional = true }
polkadot-service = { workspace = true, optional = true }
polkadot-test-service = { workspace = true, optional = true }

# Standalone

sc-consensus-aura = { workspace = true }
sc-finality-grandpa = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-finality-grandpa = { workspace = true }

# Utility
cfg-if = { version = "1.0.0" }
clap = { workspace = true, features = ["derive"] }
hex-literal = { version = "0.3.4" }
jsonrpsee = { workspace = true, features = ["server"] }
log = { workspace = true, optional = true }
url = "2.2.2"

# Zeitgeist

battery-station-runtime = { workspace = true, optional = true }
zeitgeist-primitives = { workspace = true }
zeitgeist-runtime = { workspace = true, optional = true }
zrml-liquidity-mining = { workspace = true }
zrml-swaps-rpc = { workspace = true }

[features]
default = ["with-battery-station-runtime", "with-zeitgeist-runtime"]
parachain = [
    "battery-station-runtime?/parachain",
    "zeitgeist-runtime?/parachain",

    # Cumulus

    "cumulus-client-cli",
    "cumulus-client-collator",
    "cumulus-client-consensus-common",
    "cumulus-client-consensus-relay-chain",
    "cumulus-client-network",
    "cumulus-client-service",
    "cumulus-primitives-core",
    "cumulus-primitives-parachain-inherent",
    "cumulus-relay-chain-inprocess-interface",
    "cumulus-relay-chain-interface",
    "cumulus-relay-chain-rpc-interface",
    "cumulus-relay-chain-minimal-node",


    # Parachain

    "log",
    "moonbeam-vrf",
    "nimbus-consensus",
    "nimbus-primitives",
    "pallet-author-inherent",
    "pallet-parachain-staking",
    "parity-scale-codec",
    "session-keys-primitives",
    "sc-chain-spec",
    "sc-network",
    "sc-network-common",
    "sc-tracing",
    "serde",
    "sp-keystore",
    "substrate-prometheus-endpoint",

    # Polkadot

    "polkadot-cli",
    "polkadot-parachain",
    "polkadot-primitives",
    "polkadot-service",
    "polkadot-test-service",
]
runtime-benchmarks = [
    "battery-station-runtime?/runtime-benchmarks",
    "frame-benchmarking/runtime-benchmarks",
    "frame-benchmarking-cli/runtime-benchmarks",
    "polkadot-cli?/runtime-benchmarks",
    "polkadot-service?/runtime-benchmarks",
    "zeitgeist-runtime?/runtime-benchmarks",
]
try-runtime = [
    "battery-station-runtime?/try-runtime",
    "zeitgeist-runtime?/try-runtime",
    "try-runtime-cli",
]
with-battery-station-runtime = ["battery-station-runtime"]
with-zeitgeist-runtime = ["zeitgeist-runtime"]

[package]
authors = ["Zeitgeist PM <contact@zeitgeist.pm>"]
build = "build.rs"
description = "An evolving blockchain for prediction markets and futarchy."
edition = "2021"
homepage = "https://zeitgeist.pm"
name = "zeitgeist-node"
version = "0.3.10"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

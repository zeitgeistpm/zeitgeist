// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_identity
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2023-09-11`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zeitgeist-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_identity
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_identity (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_identity::weights::WeightInfo for WeightInfo<T> {
    /// Storage: Identity Registrars (r:1 w:1)
    /// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
    fn add_registrar(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `64 + r * (57 ±0)`
        //  Estimated: `952`
        // Minimum execution time: 17_800 nanoseconds.
        Weight::from_parts(26_346_723, 952)
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity IdentityOf (r:1 w:1)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    fn set_identity(r: u32, x: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `474 + r * (5 ±0)`
        //  Estimated: `7313`
        // Minimum execution time: 35_930 nanoseconds.
        Weight::from_parts(45_846_359, 7313)
            // Standard Error: 100_560
            .saturating_add(Weight::from_ref_time(217_382).saturating_mul(r.into()))
            // Standard Error: 11_680
            .saturating_add(Weight::from_ref_time(671_593).saturating_mul(x.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity IdentityOf (r:1 w:0)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:64 w:64)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn set_subs_new(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `101`
        //  Estimated: `11894 + s * (2589 ±0)`
        // Minimum execution time: 13_900 nanoseconds.
        Weight::from_parts(34_854_787, 11894)
            // Standard Error: 31_219
            .saturating_add(Weight::from_ref_time(5_186_151).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(s.into())))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(Weight::from_proof_size(2589).saturating_mul(s.into()))
    }
    /// Storage: Identity IdentityOf (r:1 w:0)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:0 w:64)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn set_subs_old(p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `226 + p * (32 ±0)`
        //  Estimated: `11894`
        // Minimum execution time: 14_660 nanoseconds.
        Weight::from_parts(44_232_208, 11894)
            // Standard Error: 86_987
            .saturating_add(Weight::from_ref_time(2_060_287).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    /// Storage: Identity IdentityOf (r:1 w:1)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:0 w:64)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn clear_identity(r: u32, s: u32, x: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `535 + r * (5 ±0) + s * (32 ±0) + x * (66 ±0)`
        //  Estimated: `11894`
        // Minimum execution time: 51_980 nanoseconds.
        Weight::from_parts(50_958_988, 11894)
            // Standard Error: 188_022
            .saturating_add(Weight::from_ref_time(564_736).saturating_mul(r.into()))
            // Standard Error: 21_894
            .saturating_add(Weight::from_ref_time(1_981_853).saturating_mul(s.into()))
            // Standard Error: 21_894
            .saturating_add(Weight::from_ref_time(260_150).saturating_mul(x.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Identity Registrars (r:1 w:0)
    /// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
    /// Storage: Identity IdentityOf (r:1 w:1)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    fn request_judgement(_r: u32, x: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `431 + r * (57 ±0) + x * (66 ±0)`
        //  Estimated: `8265`
        // Minimum execution time: 38_610 nanoseconds.
        Weight::from_parts(58_270_556, 8265)
            // Standard Error: 13_004
            .saturating_add(Weight::from_ref_time(654_622).saturating_mul(x.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity IdentityOf (r:1 w:1)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    fn cancel_request(_r: u32, x: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `430 + x * (66 ±0)`
        //  Estimated: `7313`
        // Minimum execution time: 34_530 nanoseconds.
        Weight::from_parts(56_273_566, 7313)
            // Standard Error: 10_092
            .saturating_add(Weight::from_ref_time(596_750).saturating_mul(x.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity Registrars (r:1 w:1)
    /// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
    fn set_fee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `121 + r * (57 ±0)`
        //  Estimated: `952`
        // Minimum execution time: 12_290 nanoseconds.
        Weight::from_parts(15_471_677, 952)
            // Standard Error: 16_686
            .saturating_add(Weight::from_ref_time(227_887).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity Registrars (r:1 w:1)
    /// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
    fn set_account_id(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `121 + r * (57 ±0)`
        //  Estimated: `952`
        // Minimum execution time: 10_860 nanoseconds.
        Weight::from_parts(13_932_674, 952)
            // Standard Error: 13_006
            .saturating_add(Weight::from_ref_time(45_791).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity Registrars (r:1 w:1)
    /// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
    fn set_fields(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `121 + r * (57 ±0)`
        //  Estimated: `952`
        // Minimum execution time: 10_490 nanoseconds.
        Weight::from_parts(13_040_336, 952)
            // Standard Error: 49_106
            .saturating_add(Weight::from_ref_time(615_063).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity Registrars (r:1 w:0)
    /// Proof: Identity Registrars (max_values: Some(1), max_size: Some(457), added: 952, mode: MaxEncodedLen)
    /// Storage: Identity IdentityOf (r:1 w:1)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    fn provide_judgement(_r: u32, x: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `509 + r * (57 ±0) + x * (66 ±0)`
        //  Estimated: `8265`
        // Minimum execution time: 31_570 nanoseconds.
        Weight::from_parts(43_909_241, 8265)
            // Standard Error: 8_652
            .saturating_add(Weight::from_ref_time(1_088_260).saturating_mul(x.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    /// Storage: Identity IdentityOf (r:1 w:1)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: System Account (r:2 w:2)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:0 w:64)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn kill_identity(_r: u32, s: u32, x: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `954 + r * (5 ±0) + s * (32 ±0) + x * (66 ±0)`
        //  Estimated: `17108`
        // Minimum execution time: 76_260 nanoseconds.
        Weight::from_parts(97_407_478, 17108)
            // Standard Error: 32_302
            .saturating_add(Weight::from_ref_time(2_028_303).saturating_mul(s.into()))
            // Standard Error: 32_302
            .saturating_add(Weight::from_ref_time(122_621).saturating_mul(x.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
    }
    /// Storage: Identity IdentityOf (r:1 w:0)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:1 w:1)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    fn add_sub(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `355 + s * (41 ±0)`
        //  Estimated: `14483`
        // Minimum execution time: 40_040 nanoseconds.
        Weight::from_parts(52_828_447, 14483)
            // Standard Error: 7_788
            .saturating_add(Weight::from_ref_time(88_247).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Identity IdentityOf (r:1 w:0)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:1 w:1)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn rename_sub(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `464 + s * (7 ±0)`
        //  Estimated: `9902`
        // Minimum execution time: 19_910 nanoseconds.
        Weight::from_parts(26_129_516, 9902)
            // Standard Error: 8_291
            .saturating_add(Weight::from_ref_time(60_686).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
    }
    /// Storage: Identity IdentityOf (r:1 w:0)
    /// Proof: Identity IdentityOf (max_values: None, max_size: Some(4838), added: 7313, mode: MaxEncodedLen)
    /// Storage: Identity SuperOf (r:1 w:1)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    fn remove_sub(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `544 + s * (39 ±0)`
        //  Estimated: `14483`
        // Minimum execution time: 44_791 nanoseconds.
        Weight::from_parts(58_054_972, 14483)
            // Standard Error: 8_296
            .saturating_add(Weight::from_ref_time(128_452).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
    /// Storage: Identity SuperOf (r:1 w:1)
    /// Proof: Identity SuperOf (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: Identity SubsOf (r:1 w:1)
    /// Proof: Identity SubsOf (max_values: None, max_size: Some(2106), added: 4581, mode: MaxEncodedLen)
    fn quit_sub(s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `469 + s * (42 ±0)`
        //  Estimated: `7170`
        // Minimum execution time: 30_150 nanoseconds.
        Weight::from_parts(40_978_609, 7170)
            // Standard Error: 16_814
            .saturating_add(Weight::from_ref_time(99_989).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(2_u64))
    }
}

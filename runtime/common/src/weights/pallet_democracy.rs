// Copyright 2022-2024 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_democracy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2024-12-06`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ztg-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_democracy
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_democracy (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_democracy::weights::WeightInfo for WeightInfo<T> {
    /// Storage: `Democracy::PublicPropCount` (r:1 w:1)
    /// Proof: `Democracy::PublicPropCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:0)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:0 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    fn propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4772`
        //  Estimated: `18187`
        // Minimum execution time: 52_271 nanoseconds.
        Weight::from_parts(58_081_000, 18187)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    fn second() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3527`
        //  Estimated: `6695`
        // Minimum execution time: 47_301 nanoseconds.
        Weight::from_parts(48_661_000, 6695)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    fn vote_new() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3415`
        //  Estimated: `7264`
        // Minimum execution time: 61_632 nanoseconds.
        Weight::from_parts(69_181_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    fn vote_existing() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3437`
        //  Estimated: `7264`
        // Minimum execution time: 67_052 nanoseconds.
        Weight::from_parts(74_262_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Cancellations` (r:1 w:1)
    /// Proof: `Democracy::Cancellations` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn emergency_cancel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `341`
        //  Estimated: `3674`
        // Minimum execution time: 32_031 nanoseconds.
        Weight::from_parts(33_391_000, 3674)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:3 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:0 w:1)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    fn blacklist() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6171`
        //  Estimated: `18187`
        // Minimum execution time: 132_203 nanoseconds.
        Weight::from_parts(137_853_000, 18187)
            .saturating_add(T::DbWeight::get().reads(9))
            .saturating_add(T::DbWeight::get().writes(8))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:0)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    fn external_propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3387`
        //  Estimated: `6707`
        // Minimum execution time: 16_901 nanoseconds.
        Weight::from_parts(17_440_000, 6707)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:0 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    fn external_propose_majority() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_620 nanoseconds.
        Weight::from_parts(3_950_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:0 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    fn external_propose_default() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_710 nanoseconds.
        Weight::from_parts(4_130_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:1)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:2)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:0 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    fn fast_track() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `253`
        //  Estimated: `3518`
        // Minimum execution time: 34_691 nanoseconds.
        Weight::from_parts(36_251_000, 3518)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:1)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn veto_external() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3490`
        //  Estimated: `6707`
        // Minimum execution time: 36_000 nanoseconds.
        Weight::from_parts(37_830_000, 6707)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn cancel_proposal() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6074`
        //  Estimated: `18187`
        // Minimum execution time: 108_813 nanoseconds.
        Weight::from_parts(115_073_000, 18187)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:0 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    fn cancel_referendum() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `238`
        //  Estimated: `3518`
        // Minimum execution time: 24_160 nanoseconds.
        Weight::from_parts(25_381_000, 3518)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::LowestUnbaked` (r:1 w:1)
    /// Proof: `Democracy::LowestUnbaked` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:0)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn on_initialize_base(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `211 + r * (94 ±0)`
        //  Estimated: `1489 + r * (2684 ±0)`
        // Minimum execution time: 9_720 nanoseconds.
        Weight::from_parts(11_081_156, 1489)
            // Standard Error: 11_388
            .saturating_add(Weight::from_parts(3_878_540, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::LowestUnbaked` (r:1 w:1)
    /// Proof: `Democracy::LowestUnbaked` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:0)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::LastTabledWasExternal` (r:1 w:0)
    /// Proof: `Democracy::LastTabledWasExternal` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn on_initialize_base_with_launch_period(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `211 + r * (94 ±0)`
        //  Estimated: `18187 + r * (2684 ±0)`
        // Minimum execution time: 13_240 nanoseconds.
        Weight::from_parts(14_102_712, 18187)
            // Standard Error: 12_735
            .saturating_add(Weight::from_parts(3_908_737, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::VotingOf` (r:3 w:3)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:99)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn delegate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `779 + r * (116 ±0)`
        //  Estimated: `19812 + r * (2684 ±0)`
        // Minimum execution time: 47_431 nanoseconds.
        Weight::from_parts(53_845_361, 19812)
            // Standard Error: 13_955
            .saturating_add(Weight::from_parts(5_058_664, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(4))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::VotingOf` (r:2 w:2)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:99)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn undelegate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `468 + r * (116 ±0)`
        //  Estimated: `13538 + r * (2684 ±0)`
        // Minimum execution time: 24_790 nanoseconds.
        Weight::from_parts(24_413_485, 13538)
            // Standard Error: 14_549
            .saturating_add(Weight::from_parts(5_008_633, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(2))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::PublicProps` (r:0 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    fn clear_public_proposals() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_760 nanoseconds.
        Weight::from_parts(4_190_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn unlock_remove(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `500`
        //  Estimated: `7264`
        // Minimum execution time: 29_001 nanoseconds.
        Weight::from_parts(46_578_508, 7264)
            // Standard Error: 4_618
            .saturating_add(Weight::from_parts(93_798, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn unlock_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `501 + r * (22 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 40_221 nanoseconds.
        Weight::from_parts(43_947_716, 7264)
            // Standard Error: 2_903
            .saturating_add(Weight::from_parts(131_581, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[1, 100]`.
    fn remove_vote(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `707 + r * (26 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 19_920 nanoseconds.
        Weight::from_parts(23_586_393, 7264)
            // Standard Error: 2_637
            .saturating_add(Weight::from_parts(136_741, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[1, 100]`.
    fn remove_other_vote(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `707 + r * (26 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 19_731 nanoseconds.
        Weight::from_parts(23_399_585, 7264)
            // Standard Error: 2_655
            .saturating_add(Weight::from_parts(140_477, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `323`
        //  Estimated: `3556`
        // Minimum execution time: 23_211 nanoseconds.
        Weight::from_parts(24_030_000, 3556)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `253`
        //  Estimated: `3518`
        // Minimum execution time: 20_170 nanoseconds.
        Weight::from_parts(21_310_000, 3518)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4855`
        //  Estimated: `18187`
        // Minimum execution time: 49_671 nanoseconds.
        Weight::from_parts(52_571_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4789`
        //  Estimated: `18187`
        // Minimum execution time: 45_261 nanoseconds.
        Weight::from_parts(50_991_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `144`
        //  Estimated: `3556`
        // Minimum execution time: 18_370 nanoseconds.
        Weight::from_parts(18_990_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `273`
        //  Estimated: `3674`
        // Minimum execution time: 22_521 nanoseconds.
        Weight::from_parts(23_671_000, 3674)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
}

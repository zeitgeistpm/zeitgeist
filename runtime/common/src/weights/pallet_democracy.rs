// Copyright 2022-2025 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_democracy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 47.0.0
//! DATE: `2025-06-24`, STEPS: `2`, REPEAT: `0`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `msi-pro-b650-s`, CPU: `AMD Ryzen 9 7950X3D 16-Core Processor`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: `1024`

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime=target/release/wbuild/battery-station-runtime/battery_station_runtime.wasm
// --genesis-builder=runtime
// --genesis-builder-preset=development
// --steps=2
// --repeat=0
// --pallet=pallet_democracy
// --extrinsic=*
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_democracy (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_democracy::weights::WeightInfo for WeightInfo<T> {
    /// Storage: `Democracy::PublicPropCount` (r:1 w:1)
    /// Proof: `Democracy::PublicPropCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:0)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:0 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    fn propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4805`
        //  Estimated: `18187`
        // Minimum execution time: 34_240 nanoseconds.
        Weight::from_parts(34_240_000, 18187)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    fn second() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3560`
        //  Estimated: `6695`
        // Minimum execution time: 31_970 nanoseconds.
        Weight::from_parts(31_970_000, 6695)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    fn vote_new() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3448`
        //  Estimated: `7264`
        // Minimum execution time: 48_150 nanoseconds.
        Weight::from_parts(48_150_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    fn vote_existing() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3470`
        //  Estimated: `7264`
        // Minimum execution time: 49_330 nanoseconds.
        Weight::from_parts(49_330_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Cancellations` (r:1 w:1)
    /// Proof: `Democracy::Cancellations` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn emergency_cancel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `374`
        //  Estimated: `3674`
        // Minimum execution time: 25_750 nanoseconds.
        Weight::from_parts(25_750_000, 3674)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:3 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:0 w:1)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    fn blacklist() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6204`
        //  Estimated: `18187`
        // Minimum execution time: 90_360 nanoseconds.
        Weight::from_parts(90_360_000, 18187)
            .saturating_add(T::DbWeight::get().reads(9))
            .saturating_add(T::DbWeight::get().writes(8))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:0)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    fn external_propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3420`
        //  Estimated: `6707`
        // Minimum execution time: 17_210 nanoseconds.
        Weight::from_parts(17_210_000, 6707)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:0 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    fn external_propose_majority() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 7_100 nanoseconds.
        Weight::from_parts(7_100_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:0 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    fn external_propose_default() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 7_280 nanoseconds.
        Weight::from_parts(7_280_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:1)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:2)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:0 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    fn fast_track() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `286`
        //  Estimated: `3518`
        // Minimum execution time: 21_330 nanoseconds.
        Weight::from_parts(21_330_000, 3518)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:1)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn veto_external() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3523`
        //  Estimated: `6707`
        // Minimum execution time: 28_350 nanoseconds.
        Weight::from_parts(28_350_000, 6707)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn cancel_proposal() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6107`
        //  Estimated: `18187`
        // Minimum execution time: 68_600 nanoseconds.
        Weight::from_parts(68_600_000, 18187)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:0 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    fn cancel_referendum() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `271`
        //  Estimated: `3518`
        // Minimum execution time: 18_770 nanoseconds.
        Weight::from_parts(18_770_000, 3518)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::LowestUnbaked` (r:1 w:1)
    /// Proof: `Democracy::LowestUnbaked` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:0)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn on_initialize_base(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `183 + r * (95 ±0)`
        //  Estimated: `266706`
        // Minimum execution time: 8_030 nanoseconds.
        Weight::from_parts(294_709_000, 266706)
            .saturating_add(T::DbWeight::get().reads(101))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::LowestUnbaked` (r:1 w:1)
    /// Proof: `Democracy::LowestUnbaked` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:0)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::LastTabledWasExternal` (r:1 w:0)
    /// Proof: `Democracy::LastTabledWasExternal` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn on_initialize_base_with_launch_period(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `183 + r * (95 ±0)`
        //  Estimated: `266706`
        // Minimum execution time: 10_480 nanoseconds.
        Weight::from_parts(292_530_000, 266706)
            .saturating_add(T::DbWeight::get().reads(104))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::VotingOf` (r:3 w:3)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:99)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn delegate(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `632 + r * (118 ±0)`
        //  Estimated: `266706`
        // Minimum execution time: 35_660 nanoseconds.
        Weight::from_parts(395_630_000, 266706)
            .saturating_add(T::DbWeight::get().reads(104))
            .saturating_add(T::DbWeight::get().writes(103))
    }
    /// Storage: `Democracy::VotingOf` (r:2 w:2)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:99)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn undelegate(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `466 + r * (117 ±0)`
        //  Estimated: `266706`
        // Minimum execution time: 20_829 nanoseconds.
        Weight::from_parts(366_660_000, 266706)
            .saturating_add(T::DbWeight::get().reads(101))
            .saturating_add(T::DbWeight::get().writes(101))
    }
    /// Storage: `Democracy::PublicProps` (r:0 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    fn clear_public_proposals() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 2_740 nanoseconds.
        Weight::from_parts(2_740_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn unlock_remove(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `327 + r * (2 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 24_870 nanoseconds.
        Weight::from_parts(31_780_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn unlock_set(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `533 + r * (22 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 28_130 nanoseconds.
        Weight::from_parts(36_360_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[1, 100]`.
    fn remove_vote(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `424 + r * (28 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 14_670 nanoseconds.
        Weight::from_parts(27_200_000, 7264)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[1, 100]`.
    fn remove_other_vote(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `424 + r * (28 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 15_270 nanoseconds.
        Weight::from_parts(28_160_000, 7264)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
    /// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `356`
        //  Estimated: `3556`
        // Minimum execution time: 17_890 nanoseconds.
        Weight::from_parts(17_890_000, 3556)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `286`
        //  Estimated: `3518`
        // Minimum execution time: 14_080 nanoseconds.
        Weight::from_parts(14_080_000, 3518)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
    /// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4888`
        //  Estimated: `18187`
        // Minimum execution time: 43_520 nanoseconds.
        Weight::from_parts(43_520_000, 18187)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4822`
        //  Estimated: `18187`
        // Minimum execution time: 31_710 nanoseconds.
        Weight::from_parts(31_710_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::RequestStatusFor` (r:1 w:0)
    /// Proof: `Preimage::RequestStatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `144`
        //  Estimated: `3556`
        // Minimum execution time: 17_750 nanoseconds.
        Weight::from_parts(17_750_000, 3556)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `306`
        //  Estimated: `3674`
        // Minimum execution time: 19_810 nanoseconds.
        Weight::from_parts(19_810_000, 3674)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
}

// Copyright 2022-2025 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_democracy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2025-02-26`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `ztg-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: ``, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_democracy
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_democracy (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_democracy::weights::WeightInfo for WeightInfo<T> {
    /// Storage: `Democracy::PublicPropCount` (r:1 w:1)
    /// Proof: `Democracy::PublicPropCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:0)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:0 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    fn propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4805`
        //  Estimated: `18187`
        // Minimum execution time: 49_831 nanoseconds.
        Weight::from_parts(56_301_000, 18187)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    fn second() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3560`
        //  Estimated: `6695`
        // Minimum execution time: 45_391 nanoseconds.
        Weight::from_parts(50_581_000, 6695)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    fn vote_new() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3448`
        //  Estimated: `7264`
        // Minimum execution time: 58_741 nanoseconds.
        Weight::from_parts(65_742_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    fn vote_existing() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3470`
        //  Estimated: `7264`
        // Minimum execution time: 64_482 nanoseconds.
        Weight::from_parts(70_821_000, 7264)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Cancellations` (r:1 w:1)
    /// Proof: `Democracy::Cancellations` (`max_values`: None, `max_size`: Some(33), added: 2508, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn emergency_cancel() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `374`
        //  Estimated: `3674`
        // Minimum execution time: 30_650 nanoseconds.
        Weight::from_parts(31_881_000, 3674)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:3 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:0 w:1)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    fn blacklist() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6204`
        //  Estimated: `18187`
        // Minimum execution time: 123_942 nanoseconds.
        Weight::from_parts(131_672_000, 18187)
            .saturating_add(T::DbWeight::get().reads(9))
            .saturating_add(T::DbWeight::get().writes(8))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:0)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    fn external_propose() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3420`
        //  Estimated: `6707`
        // Minimum execution time: 16_071 nanoseconds.
        Weight::from_parts(16_590_000, 6707)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:0 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    fn external_propose_majority() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_490 nanoseconds.
        Weight::from_parts(3_740_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:0 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    fn external_propose_default() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_450 nanoseconds.
        Weight::from_parts(3_800_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:1)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:2)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:0 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    fn fast_track() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `286`
        //  Estimated: `3518`
        // Minimum execution time: 32_130 nanoseconds.
        Weight::from_parts(33_460_000, 3518)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:1)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::Blacklist` (r:1 w:1)
    /// Proof: `Democracy::Blacklist` (`max_values`: None, `max_size`: Some(3242), added: 5717, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn veto_external() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `3523`
        //  Estimated: `6707`
        // Minimum execution time: 35_370 nanoseconds.
        Weight::from_parts(36_381_000, 6707)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::DepositOf` (r:1 w:1)
    /// Proof: `Democracy::DepositOf` (`max_values`: None, `max_size`: Some(3230), added: 5705, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:2 w:2)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn cancel_proposal() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `6107`
        //  Estimated: `18187`
        // Minimum execution time: 103_092 nanoseconds.
        Weight::from_parts(108_262_000, 18187)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:0 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    fn cancel_referendum() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `271`
        //  Estimated: `3518`
        // Minimum execution time: 22_920 nanoseconds.
        Weight::from_parts(24_150_000, 3518)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::LowestUnbaked` (r:1 w:1)
    /// Proof: `Democracy::LowestUnbaked` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:0)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn on_initialize_base(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `244 + r * (94 ±0)`
        //  Estimated: `1489 + r * (2684 ±0)`
        // Minimum execution time: 9_520 nanoseconds.
        Weight::from_parts(10_641_398, 1489)
            // Standard Error: 8_167
            .saturating_add(Weight::from_parts(3_786_740, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::LowestUnbaked` (r:1 w:1)
    /// Proof: `Democracy::LowestUnbaked` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumCount` (r:1 w:0)
    /// Proof: `Democracy::ReferendumCount` (`max_values`: Some(1), `max_size`: Some(4), added: 499, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::LastTabledWasExternal` (r:1 w:0)
    /// Proof: `Democracy::LastTabledWasExternal` (`max_values`: Some(1), `max_size`: Some(1), added: 496, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn on_initialize_base_with_launch_period(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `244 + r * (94 ±0)`
        //  Estimated: `18187 + r * (2684 ±0)`
        // Minimum execution time: 13_460 nanoseconds.
        Weight::from_parts(13_854_356, 18187)
            // Standard Error: 11_569
            .saturating_add(Weight::from_parts(3_831_683, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::VotingOf` (r:3 w:3)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:99)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn delegate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `812 + r * (116 ±0)`
        //  Estimated: `19812 + r * (2684 ±0)`
        // Minimum execution time: 46_101 nanoseconds.
        Weight::from_parts(51_840_545, 19812)
            // Standard Error: 12_797
            .saturating_add(Weight::from_parts(4_935_752, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(4))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::VotingOf` (r:2 w:2)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::ReferendumInfoOf` (r:99 w:99)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn undelegate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `501 + r * (116 ±0)`
        //  Estimated: `13538 + r * (2684 ±0)`
        // Minimum execution time: 24_110 nanoseconds.
        Weight::from_parts(21_796_003, 13538)
            // Standard Error: 13_586
            .saturating_add(Weight::from_parts(4_939_390, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(2))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(r.into())))
            .saturating_add(Weight::from_parts(0, 2684).saturating_mul(r.into()))
    }
    /// Storage: `Democracy::PublicProps` (r:0 w:1)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    fn clear_public_proposals() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_480 nanoseconds.
        Weight::from_parts(3_771_000, 0).saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn unlock_remove(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `533`
        //  Estimated: `7264`
        // Minimum execution time: 27_331 nanoseconds.
        Weight::from_parts(44_046_335, 7264)
            // Standard Error: 4_822
            .saturating_add(Weight::from_parts(106_950, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Locks` (r:1 w:1)
    /// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
    /// Storage: `Balances::Freezes` (r:1 w:0)
    /// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(65), added: 2540, mode: `MaxEncodedLen`)
    /// Storage: `System::Account` (r:1 w:1)
    /// Proof: `System::Account` (`max_values`: None, `max_size`: Some(132), added: 2607, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[0, 99]`.
    fn unlock_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `534 + r * (22 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 38_730 nanoseconds.
        Weight::from_parts(42_363_406, 7264)
            // Standard Error: 3_572
            .saturating_add(Weight::from_parts(132_924, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[1, 100]`.
    fn remove_vote(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `740 + r * (26 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 18_990 nanoseconds.
        Weight::from_parts(23_054_302, 7264)
            // Standard Error: 2_874
            .saturating_add(Weight::from_parts(143_665, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:1)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::VotingOf` (r:1 w:1)
    /// Proof: `Democracy::VotingOf` (`max_values`: None, `max_size`: Some(3799), added: 6274, mode: `MaxEncodedLen`)
    /// The range of component `r` is `[1, 100]`.
    fn remove_other_vote(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `740 + r * (26 ±0)`
        //  Estimated: `7264`
        // Minimum execution time: 18_941 nanoseconds.
        Weight::from_parts(23_263_998, 7264)
            // Standard Error: 3_050
            .saturating_add(Weight::from_parts(137_789, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `356`
        //  Estimated: `3556`
        // Minimum execution time: 22_791 nanoseconds.
        Weight::from_parts(23_490_000, 3556)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::NextExternal` (r:1 w:0)
    /// Proof: `Democracy::NextExternal` (`max_values`: Some(1), `max_size`: Some(132), added: 627, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_external_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `286`
        //  Estimated: `3518`
        // Minimum execution time: 20_290 nanoseconds.
        Weight::from_parts(20_830_000, 3518)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4888`
        //  Estimated: `18187`
        // Minimum execution time: 48_181 nanoseconds.
        Weight::from_parts(49_521_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::PublicProps` (r:1 w:0)
    /// Proof: `Democracy::PublicProps` (`max_values`: Some(1), `max_size`: Some(16702), added: 17197, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_proposal_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `4822`
        //  Estimated: `18187`
        // Minimum execution time: 43_521 nanoseconds.
        Weight::from_parts(47_611_000, 18187)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Preimage::StatusFor` (r:1 w:0)
    /// Proof: `Preimage::StatusFor` (`max_values`: None, `max_size`: Some(91), added: 2566, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:0 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn set_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `144`
        //  Estimated: `3556`
        // Minimum execution time: 17_830 nanoseconds.
        Weight::from_parts(18_231_000, 3556)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: `Democracy::ReferendumInfoOf` (r:1 w:0)
    /// Proof: `Democracy::ReferendumInfoOf` (`max_values`: None, `max_size`: Some(209), added: 2684, mode: `MaxEncodedLen`)
    /// Storage: `Democracy::MetadataOf` (r:1 w:1)
    /// Proof: `Democracy::MetadataOf` (`max_values`: None, `max_size`: Some(53), added: 2528, mode: `MaxEncodedLen`)
    fn clear_referendum_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `306`
        //  Estimated: `3674`
        // Minimum execution time: 22_351 nanoseconds.
        Weight::from_parts(23_221_000, 3674)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
}

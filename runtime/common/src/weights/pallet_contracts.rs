// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2024-02-15`, STEPS: `2`, REPEAT: `0`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zafoi`, CPU: `AMD Ryzen 9 5900X 12-Core Processor`
//! EXECUTION: `Some(Native)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=2
// --repeat=0
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=native
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_contracts (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
    /// Storage: Contracts DeletionQueue (r:1 w:0)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    fn on_process_deletion_queue_batch() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 3_580 nanoseconds.
        Weight::from_parts(3_580_000, 0).saturating_add(T::DbWeight::get().reads(1))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `k` is `[0, 1024]`.
    fn on_initialize_per_trie_key(_k: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `280 + k * (69 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 8_570 nanoseconds.
        Weight::from_parts(984_005_000, 0)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1025))
    }
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// The range of component `q` is `[0, 128]`.
    fn on_initialize_per_queue_item(_q: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42 + q * (34 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 2_970 nanoseconds.
        Weight::from_parts(98_383_000, 0)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts PristineCode (r:1 w:0)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn reinstrument(_c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `271`
        //  Estimated: `0`
        // Minimum execution time: 19_261 nanoseconds.
        Weight::from_parts(2_411_872_000, 0)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `c` is `[0, 125952]`.
    fn call_with_code_per_byte(_c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `747`
        //  Estimated: `0`
        // Minimum execution time: 179_665 nanoseconds.
        Weight::from_parts(2_252_239_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate_with_code(c: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `105`
        //  Estimated: `0`
        // Minimum execution time: 2_239_028 nanoseconds.
        Weight::from_parts(2_239_028_000, 0)
            // Standard Error: 8_881
            .saturating_add(Weight::from_parts(45_107, 0).saturating_mul(c.into()))
            // Standard Error: 522
            .saturating_add(Weight::from_parts(258, 0).saturating_mul(i.into()))
            // Standard Error: 522
            .saturating_add(Weight::from_parts(264, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(9))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate(i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `446`
        //  Estimated: `0`
        // Minimum execution time: 1_385_095 nanoseconds.
        Weight::from_parts(616_576_000, 0)
            // Standard Error: 26
            .saturating_add(Weight::from_parts(735, 0).saturating_mul(i.into()))
            // Standard Error: 26
            .saturating_add(Weight::from_parts(732, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(7))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn call() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `727`
        //  Estimated: `0`
        // Minimum execution time: 102_042 nanoseconds.
        Weight::from_parts(102_042_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn upload_code(_c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 179_815 nanoseconds.
        Weight::from_parts(4_022_303_000, 0)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    fn remove_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `218`
        //  Estimated: `0`
        // Minimum execution time: 16_090 nanoseconds.
        Weight::from_parts(16_090_000, 0)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:2 w:2)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn set_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `567`
        //  Estimated: `0`
        // Minimum execution time: 19_411 nanoseconds.
        Weight::from_parts(19_411_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(6))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `695 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_905 nanoseconds.
        Weight::from_parts(398_440_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_is_contract(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `696 + r * (19211 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_424 nanoseconds.
        Weight::from_parts(3_865_098_000, 0)
            .saturating_add(T::DbWeight::get().reads(1606))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_code_hash(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `705 + r * (19531 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 176_775 nanoseconds.
        Weight::from_parts(4_543_177_000, 0)
            .saturating_add(T::DbWeight::get().reads(1606))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_own_code_hash(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `702 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 174_865 nanoseconds.
        Weight::from_parts(402_140_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller_is_origin(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_064 nanoseconds.
        Weight::from_parts(309_308_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_address(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `696 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 172_995 nanoseconds.
        Weight::from_parts(389_370_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas_left(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `697 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_434 nanoseconds.
        Weight::from_parts(400_600_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:2 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_balance(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `696 + r * (488 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 172_775 nanoseconds.
        Weight::from_parts(1_233_411_000, 0)
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_value_transferred(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 171_744 nanoseconds.
        Weight::from_parts(429_791_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_minimum_balance(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `704 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 174_004 nanoseconds.
        Weight::from_parts(398_920_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_block_number(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `701 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_704 nanoseconds.
        Weight::from_parts(435_591_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_now(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 172_924 nanoseconds.
        Weight::from_parts(398_800_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
    /// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_weight_to_fee(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + r * (805 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 194_355 nanoseconds.
        Weight::from_parts(1_186_620_000, 0)
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `659 + r * (320 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 96_473 nanoseconds.
        Weight::from_parts(236_846_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_input(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_754 nanoseconds.
        Weight::from_parts(388_760_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_input_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1176`
        //  Estimated: `0`
        // Minimum execution time: 186_675 nanoseconds.
        Weight::from_parts(18_309_830_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_return(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `684 + r * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 170_794 nanoseconds.
        Weight::from_parts(176_204_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_return_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692`
        //  Estimated: `0`
        // Minimum execution time: 171_734 nanoseconds.
        Weight::from_parts(445_731_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:3 w:3)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_terminate(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `726 + r * (285 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_994 nanoseconds.
        Weight::from_parts(230_156_000, 0)
            .saturating_add(T::DbWeight::get().reads(11))
            .saturating_add(T::DbWeight::get().writes(9))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
    /// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_random(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `697 + r * (803 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 171_664 nanoseconds.
        Weight::from_parts(1_233_671_000, 0)
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_deposit_event(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 176_445 nanoseconds.
        Weight::from_parts(2_172_755_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:322 w:322)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 4]`.
    /// The range of component `n` is `[0, 16]`.
    fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1598 + t * (2600 ±0) + n * (10 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 466_252 nanoseconds.
        Weight::from_parts(287_492_500, 0)
            // Standard Error: 5_003_245
            .saturating_add(Weight::from_parts(113_174_125, 0).saturating_mul(t.into()))
            // Standard Error: 1_250_811
            .saturating_add(Weight::from_parts(11_172_468, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_debug_message(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `691 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 102_063 nanoseconds.
        Weight::from_parts(343_079_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_set_storage(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (23412 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 184_665 nanoseconds.
        Weight::from_parts(3_528_681_000, 0)
            .saturating_add(T::DbWeight::get().reads(806))
            .saturating_add(T::DbWeight::get().writes(803))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_new_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1931 + n * (13146 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 254_867 nanoseconds.
        Weight::from_parts(651_147_000, 0)
            .saturating_add(T::DbWeight::get().reads(87))
            .saturating_add(T::DbWeight::get().writes(85))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_old_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1931 + n * (177300 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 266_557 nanoseconds.
        Weight::from_parts(628_756_000, 0)
            .saturating_add(T::DbWeight::get().reads(86))
            .saturating_add(T::DbWeight::get().writes(83))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_clear_storage(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (23092 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_885 nanoseconds.
        Weight::from_parts(3_409_749_000, 0)
            .saturating_add(T::DbWeight::get().reads(806))
            .saturating_add(T::DbWeight::get().writes(803))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_clear_storage_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1435 + n * (177322 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 244_096 nanoseconds.
        Weight::from_parts(599_955_000, 0)
            .saturating_add(T::DbWeight::get().reads(86))
            .saturating_add(T::DbWeight::get().writes(83))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_get_storage(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + r * (23732 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_955 nanoseconds.
        Weight::from_parts(2_709_320_000, 0)
            .saturating_add(T::DbWeight::get().reads(806))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_get_storage_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1764 + n * (177363 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 235_166 nanoseconds.
        Weight::from_parts(610_066_000, 0)
            .saturating_add(T::DbWeight::get().reads(86))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_contains_storage(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `697 + r * (23092 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 177_305 nanoseconds.
        Weight::from_parts(2_626_618_000, 0)
            .saturating_add(T::DbWeight::get().reads(806))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_contains_storage_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1438 + n * (177322 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 218_365 nanoseconds.
        Weight::from_parts(542_574_000, 0)
            .saturating_add(T::DbWeight::get().reads(86))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_take_storage(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `704 + r * (23732 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 198_385 nanoseconds.
        Weight::from_parts(3_505_881_000, 0)
            .saturating_add(T::DbWeight::get().reads(806))
            .saturating_add(T::DbWeight::get().writes(803))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_take_storage_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1765 + n * (177363 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 236_026 nanoseconds.
        Weight::from_parts(666_147_000, 0)
            .saturating_add(T::DbWeight::get().reads(86))
            .saturating_add(T::DbWeight::get().writes(83))
    }
    /// Storage: System Account (r:1602 w:1601)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_transfer(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `717 + r * (3631 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 176_465 nanoseconds.
        Weight::from_parts(13_119_076_000, 0)
            .saturating_add(T::DbWeight::get().reads(1607))
            .saturating_add(T::DbWeight::get().writes(1604))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_call(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `718 + r * (20498 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 176_234 nanoseconds.
        Weight::from_parts(226_800_040_000, 0)
            .saturating_add(T::DbWeight::get().reads(3207))
            .saturating_add(T::DbWeight::get().writes(3203))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1537 w:1537)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_delegate_call(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + r * (74458 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 177_375 nanoseconds.
        Weight::from_parts(226_439_247_000, 0)
            .saturating_add(T::DbWeight::get().reads(3076))
            .saturating_add(T::DbWeight::get().writes(1538))
    }
    /// Storage: System Account (r:82 w:81)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `c` is `[0, 1024]`.
    fn seal_call_per_transfer_clone_kb(t: u32, c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `21128 + t * (15897 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 5_581_492 nanoseconds.
        Weight::from_parts(4_935_940_999, 0)
            // Standard Error: 11_041_823
            .saturating_add(Weight::from_parts(645_551_000, 0).saturating_mul(t.into()))
            // Standard Error: 10_783
            .saturating_add(Weight::from_parts(17_775_676, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(167))
            .saturating_add(T::DbWeight::get().reads((81_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(163))
            .saturating_add(T::DbWeight::get().writes((81_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1602 w:1602)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1601 w:1600)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1600 w:1600)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiate(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `742 + r * (25594 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_805 nanoseconds.
        Weight::from_parts(321_382_493_000, 0)
            .saturating_add(T::DbWeight::get().reads(8008))
            .saturating_add(T::DbWeight::get().writes(8006))
    }
    /// Storage: System Account (r:82 w:82)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `i` is `[0, 960]`.
    /// The range of component `s` is `[0, 960]`.
    fn seal_instantiate_per_transfer_input_salt_kb(_t: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5156 + t * (68 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 71_057_159 nanoseconds.
        Weight::from_parts(71_057_159_000, 0)
            // Standard Error: 25_212_820
            .saturating_add(Weight::from_parts(66_641_535, 0).saturating_mul(i.into()))
            // Standard Error: 25_212_820
            .saturating_add(Weight::from_parts(66_615_773, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(307))
            .saturating_add(T::DbWeight::get().writes(304))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_sha2_256(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `691 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_775 nanoseconds.
        Weight::from_parts(189_505_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_sha2_256_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1333`
        //  Estimated: `0`
        // Minimum execution time: 189_384 nanoseconds.
        Weight::from_parts(46_429_658_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_keccak_256(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 171_414 nanoseconds.
        Weight::from_parts(208_715_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_keccak_256_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1335`
        //  Estimated: `0`
        // Minimum execution time: 209_756 nanoseconds.
        Weight::from_parts(175_664_912_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_256(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_004 nanoseconds.
        Weight::from_parts(200_015_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_256_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1335`
        //  Estimated: `0`
        // Minimum execution time: 201_325 nanoseconds.
        Weight::from_parts(68_755_378_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_128(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 172_824 nanoseconds.
        Weight::from_parts(195_655_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_128_per_kb(_n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1335`
        //  Estimated: `0`
        // Minimum execution time: 202_786 nanoseconds.
        Weight::from_parts(68_773_308_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_recover(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `737 + r * (6083 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 174_755 nanoseconds.
        Weight::from_parts(2_769_740_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_to_eth_address(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (3362 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_395 nanoseconds.
        Weight::from_parts(600_975_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1538 w:1538)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_set_code_hash(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `698 + r * (81746 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 173_474 nanoseconds.
        Weight::from_parts(19_254_512_000, 0)
            .saturating_add(T::DbWeight::get().reads(4613))
            .saturating_add(T::DbWeight::get().writes(3075))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_reentrance_count(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `687 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 182_275 nanoseconds.
        Weight::from_parts(312_438_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_account_reentrance_count(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `704 + r * (3169 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 174_775 nanoseconds.
        Weight::from_parts(433_051_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiation_nonce(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `690 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 175_375 nanoseconds.
        Weight::from_parts(317_528_000, 0)
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64const(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_250 nanoseconds.
        Weight::from_parts(14_320_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64load(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_560 nanoseconds.
        Weight::from_parts(273_497_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64store(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_500 nanoseconds.
        Weight::from_parts(147_333_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_select(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_250 nanoseconds.
        Weight::from_parts(65_622_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_if(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_220 nanoseconds.
        Weight::from_parts(71_172_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_280 nanoseconds.
        Weight::from_parts(35_310_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_if(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_300 nanoseconds.
        Weight::from_parts(56_291_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_table(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_210 nanoseconds.
        Weight::from_parts(58_811_000, 0)
    }
    /// The range of component `e` is `[1, 256]`.
    fn instr_br_table_per_entry(_e: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 4_120 nanoseconds.
        Weight::from_parts(4_860_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_320 nanoseconds.
        Weight::from_parts(210_196_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call_indirect(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_430 nanoseconds.
        Weight::from_parts(305_568_000, 0)
    }
    /// The range of component `p` is `[0, 128]`.
    fn instr_call_indirect_per_param(_p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 9_010 nanoseconds.
        Weight::from_parts(42_741_000, 0)
    }
    /// The range of component `l` is `[0, 1024]`.
    fn instr_call_per_local(_l: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_600 nanoseconds.
        Weight::from_parts(12_971_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_get(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_640 nanoseconds.
        Weight::from_parts(23_371_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_set(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_660 nanoseconds.
        Weight::from_parts(24_590_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_tee(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_840 nanoseconds.
        Weight::from_parts(29_981_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_get(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(87_812_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_set(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_720 nanoseconds.
        Weight::from_parts(85_122_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_memory_current(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_651 nanoseconds.
        Weight::from_parts(52_571_000, 0)
    }
    /// The range of component `r` is `[0, 1]`.
    fn instr_memory_grow(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_470 nanoseconds.
        Weight::from_parts(138_103_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64clz(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_230 nanoseconds.
        Weight::from_parts(29_451_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ctz(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_320 nanoseconds.
        Weight::from_parts(29_631_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64popcnt(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(30_980_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eqz(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_560 nanoseconds.
        Weight::from_parts(29_891_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendsi32(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_250 nanoseconds.
        Weight::from_parts(29_611_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendui32(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_180 nanoseconds.
        Weight::from_parts(33_711_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i32wrapi64(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_300 nanoseconds.
        Weight::from_parts(29_861_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eq(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_210 nanoseconds.
        Weight::from_parts(46_101_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ne(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_230 nanoseconds.
        Weight::from_parts(45_991_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64lts(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_220 nanoseconds.
        Weight::from_parts(46_892_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ltu(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_250 nanoseconds.
        Weight::from_parts(47_132_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gts(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_270 nanoseconds.
        Weight::from_parts(45_971_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gtu(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_330 nanoseconds.
        Weight::from_parts(45_902_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64les(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_220 nanoseconds.
        Weight::from_parts(50_231_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64leu(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_270 nanoseconds.
        Weight::from_parts(47_121_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ges(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_241 nanoseconds.
        Weight::from_parts(45_921_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64geu(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_210 nanoseconds.
        Weight::from_parts(45_921_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64add(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_310 nanoseconds.
        Weight::from_parts(47_321_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64sub(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_310 nanoseconds.
        Weight::from_parts(45_871_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64mul(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_220 nanoseconds.
        Weight::from_parts(46_181_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divs(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_370 nanoseconds.
        Weight::from_parts(50_561_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divu(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_310 nanoseconds.
        Weight::from_parts(48_431_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rems(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_230 nanoseconds.
        Weight::from_parts(50_451_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64remu(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(48_111_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64and(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_230 nanoseconds.
        Weight::from_parts(47_251_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64or(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_240 nanoseconds.
        Weight::from_parts(47_301_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64xor(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_480 nanoseconds.
        Weight::from_parts(45_921_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shl(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_300 nanoseconds.
        Weight::from_parts(46_191_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shrs(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_300 nanoseconds.
        Weight::from_parts(47_001_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shru(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_290 nanoseconds.
        Weight::from_parts(47_222_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotl(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_260 nanoseconds.
        Weight::from_parts(46_141_000, 0)
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotr(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(46_151_000, 0)
    }
}

// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2023-10-25`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zeitgeist-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_contracts (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
    /// Storage: Contracts DeletionQueue (r:1 w:0)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    fn on_process_deletion_queue_batch() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 6_390 nanoseconds.
        Weight::from_parts(6_800_000, 0).saturating_add(T::DbWeight::get().reads(1))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `k` is `[0, 1024]`.
    fn on_initialize_per_trie_key(k: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `414 + k * (69 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 16_110 nanoseconds.
        Weight::from_parts(17_498_174, 0)
            // Standard Error: 8_764
            .saturating_add(Weight::from_parts(1_845_920, 0).saturating_mul(k.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
    }
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// The range of component `q` is `[0, 128]`.
    fn on_initialize_per_queue_item(q: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `214 + q * (33 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 5_320 nanoseconds.
        Weight::from_parts(17_768_678, 0)
            // Standard Error: 16_408
            .saturating_add(Weight::from_parts(2_245_997, 0).saturating_mul(q.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts PristineCode (r:1 w:0)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn reinstrument(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `203 + c * (1 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 61_031 nanoseconds.
        Weight::from_parts(96_901_594, 0)
            // Standard Error: 496
            .saturating_add(Weight::from_parts(104_553, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `c` is `[0, 125952]`.
    fn call_with_code_per_byte(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `675`
        //  Estimated: `0`
        // Minimum execution time: 548_392 nanoseconds.
        Weight::from_parts(731_430_648, 0)
            // Standard Error: 274
            .saturating_add(Weight::from_parts(59_880, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate_with_code(c: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `157`
        //  Estimated: `0`
        // Minimum execution time: 6_948_252 nanoseconds.
        Weight::from_parts(842_384_814, 0)
            // Standard Error: 832
            .saturating_add(Weight::from_parts(181_029, 0).saturating_mul(c.into()))
            // Standard Error: 49
            .saturating_add(Weight::from_parts(2_922, 0).saturating_mul(i.into()))
            // Standard Error: 49
            .saturating_add(Weight::from_parts(3_510, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(9))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate(i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `433`
        //  Estimated: `0`
        // Minimum execution time: 2_540_808 nanoseconds.
        Weight::from_parts(595_650_884, 0)
            // Standard Error: 48
            .saturating_add(Weight::from_parts(2_130, 0).saturating_mul(i.into()))
            // Standard Error: 48
            .saturating_add(Weight::from_parts(3_126, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(7))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn call() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `727`
        //  Estimated: `0`
        // Minimum execution time: 228_391 nanoseconds.
        Weight::from_parts(278_201_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn upload_code(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 602_562 nanoseconds.
        Weight::from_parts(697_000_805, 0)
            // Standard Error: 1_063
            .saturating_add(Weight::from_parts(188_416, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    fn remove_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `218`
        //  Estimated: `0`
        // Minimum execution time: 37_290 nanoseconds.
        Weight::from_parts(45_580_000, 0)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:2 w:2)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn set_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `567`
        //  Estimated: `0`
        // Minimum execution time: 42_671 nanoseconds.
        Weight::from_parts(51_910_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(6))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `697 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 535_552 nanoseconds.
        Weight::from_parts(684_787_809, 0)
            // Standard Error: 678_512
            .saturating_add(Weight::from_parts(40_079_220, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_is_contract(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `749 + r * (19218 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 536_032 nanoseconds.
        Weight::from_parts(483_493_910, 0)
            // Standard Error: 1_504_096
            .saturating_add(Weight::from_parts(458_565_900, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `741 + r * (19539 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 539_622 nanoseconds.
        Weight::from_parts(404_765_458, 0)
            // Standard Error: 1_736_557
            .saturating_add(Weight::from_parts(546_753_159, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_own_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `704 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 537_862 nanoseconds.
        Weight::from_parts(702_633_145, 0)
            // Standard Error: 668_343
            .saturating_add(Weight::from_parts(41_612_969, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller_is_origin(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 533_112 nanoseconds.
        Weight::from_parts(653_370_992, 0)
            // Standard Error: 440_087
            .saturating_add(Weight::from_parts(22_783_189, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_address(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `698 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_612 nanoseconds.
        Weight::from_parts(679_142_053, 0)
            // Standard Error: 471_149
            .saturating_add(Weight::from_parts(35_590_449, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas_left(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `699 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_341 nanoseconds.
        Weight::from_parts(650_082_231, 0)
            // Standard Error: 500_514
            .saturating_add(Weight::from_parts(37_595_102, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:2 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_balance(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `873 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_442 nanoseconds.
        Weight::from_parts(671_569_610, 0)
            // Standard Error: 834_847
            .saturating_add(Weight::from_parts(171_590_994, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_value_transferred(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `708 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 532_762 nanoseconds.
        Weight::from_parts(657_616_211, 0)
            // Standard Error: 899_157
            .saturating_add(Weight::from_parts(37_407_507, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_minimum_balance(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_672 nanoseconds.
        Weight::from_parts(666_305_025, 0)
            // Standard Error: 674_283
            .saturating_add(Weight::from_parts(37_129_240, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_block_number(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_661 nanoseconds.
        Weight::from_parts(657_489_104, 0)
            // Standard Error: 521_523
            .saturating_add(Weight::from_parts(36_933_388, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_now(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 535_102 nanoseconds.
        Weight::from_parts(676_467_296, 0)
            // Standard Error: 600_497
            .saturating_add(Weight::from_parts(35_420_595, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
    /// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_weight_to_fee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `809 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 535_841 nanoseconds.
        Weight::from_parts(683_857_279, 0)
            // Standard Error: 715_815
            .saturating_add(Weight::from_parts(160_158_895, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `661 + r * (320 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 195_350 nanoseconds.
        Weight::from_parts(235_736_945, 0)
            // Standard Error: 237_408
            .saturating_add(Weight::from_parts(17_693_780, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_input(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `696 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_762 nanoseconds.
        Weight::from_parts(645_918_150, 0)
            // Standard Error: 738_459
            .saturating_add(Weight::from_parts(35_776_568, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_input_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1176`
        //  Estimated: `0`
        // Minimum execution time: 568_112 nanoseconds.
        Weight::from_parts(839_531_613, 0)
            // Standard Error: 50_315
            .saturating_add(Weight::from_parts(12_273_119, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_return(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `684 + r * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 530_752 nanoseconds.
        Weight::from_parts(664_866_575, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_return_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694`
        //  Estimated: `0`
        // Minimum execution time: 533_101 nanoseconds.
        Weight::from_parts(626_179_160, 0)
            // Standard Error: 10_080
            .saturating_add(Weight::from_parts(389_208, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:3 w:3)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_terminate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `726 + r * (285 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 533_922 nanoseconds.
        Weight::from_parts(662_814_704, 0)
            // Standard Error: 10_208_426
            .saturating_add(Weight::from_parts(65_759_495, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
    /// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_random(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `775 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_572 nanoseconds.
        Weight::from_parts(647_025_351, 0)
            // Standard Error: 1_159_894
            .saturating_add(Weight::from_parts(207_568_972, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_deposit_event(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 529_741 nanoseconds.
        Weight::from_parts(613_973_354, 0)
            // Standard Error: 984_670
            .saturating_add(Weight::from_parts(405_101_002, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:322 w:322)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 4]`.
    /// The range of component `n` is `[0, 16]`.
    fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1630 + t * (2608 ±0) + n * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 1_973_097 nanoseconds.
        Weight::from_parts(946_904_790, 0)
            // Standard Error: 3_997_989
            .saturating_add(Weight::from_parts(347_080_943, 0).saturating_mul(t.into()))
            // Standard Error: 1_098_041
            .saturating_add(Weight::from_parts(124_035_590, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_debug_message(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 223_441 nanoseconds.
        Weight::from_parts(290_935_537, 0)
            // Standard Error: 241_403
            .saturating_add(Weight::from_parts(30_440_276, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_set_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `720 + r * (23420 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 533_902 nanoseconds.
        Weight::from_parts(577_630_485, 0)
            // Standard Error: 2_408_816
            .saturating_add(Weight::from_parts(821_568_409, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_new_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `12402 + n * (12006 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 758_442 nanoseconds.
        Weight::from_parts(1_221_798_222, 0)
            // Standard Error: 3_439_887
            .saturating_add(Weight::from_parts(184_887_572, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(52))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(50))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_old_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14990 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 756_943 nanoseconds.
        Weight::from_parts(1_236_797_439, 0)
            // Standard Error: 3_349_250
            .saturating_add(Weight::from_parts(106_340_610, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(49))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_clear_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `720 + r * (23100 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 536_812 nanoseconds.
        Weight::from_parts(544_422_299, 0)
            // Standard Error: 3_373_768
            .saturating_add(Weight::from_parts(809_752_042, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_clear_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14670 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 704_063 nanoseconds.
        Weight::from_parts(1_168_926_033, 0)
            // Standard Error: 3_012_712
            .saturating_add(Weight::from_parts(113_252_251, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(48))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_get_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `730 + r * (23740 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 540_782 nanoseconds.
        Weight::from_parts(604_103_979, 0)
            // Standard Error: 2_452_163
            .saturating_add(Weight::from_parts(659_347_493, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_get_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `15321 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 678_092 nanoseconds.
        Weight::from_parts(1_155_612_178, 0)
            // Standard Error: 3_624_142
            .saturating_add(Weight::from_parts(278_889_523, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_contains_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `723 + r * (23100 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 537_101 nanoseconds.
        Weight::from_parts(554_645_766, 0)
            // Standard Error: 2_641_073
            .saturating_add(Weight::from_parts(632_807_668, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_contains_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14673 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 665_912 nanoseconds.
        Weight::from_parts(1_040_953_721, 0)
            // Standard Error: 2_696_149
            .saturating_add(Weight::from_parts(106_678_921, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_take_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `731 + r * (23740 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 538_482 nanoseconds.
        Weight::from_parts(422_000_029, 0)
            // Standard Error: 3_577_317
            .saturating_add(Weight::from_parts(856_722_439, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_take_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `15322 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 713_993 nanoseconds.
        Weight::from_parts(1_267_575_312, 0)
            // Standard Error: 3_924_466
            .saturating_add(Weight::from_parts(272_437_447, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(48))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: System Account (r:1602 w:1601)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_transfer(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1322 + r * (3601 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 537_791 nanoseconds.
        Weight::from_parts(617_094_789, 0)
            // Standard Error: 2_893_420
            .saturating_add(Weight::from_parts(2_340_438_170, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(4))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `948 + r * (20495 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 538_052 nanoseconds.
        Weight::from_parts(543_252_000, 0)
            // Standard Error: 39_197_014
            .saturating_add(Weight::from_parts(50_755_358_343, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().reads((160_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((160_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1537 w:1537)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_delegate_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + r * (71670 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 548_332 nanoseconds.
        Weight::from_parts(664_512_000, 0)
            // Standard Error: 38_649_522
            .saturating_add(Weight::from_parts(49_980_161_132, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((150_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((75_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:82 w:81)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `c` is `[0, 1024]`.
    fn seal_call_per_transfer_clone_kb(t: u32, c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `21128 + t * (15897 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 16_839_323 nanoseconds.
        Weight::from_parts(16_275_890_867, 0)
            // Standard Error: 71_746_414
            .saturating_add(Weight::from_parts(2_118_955_274, 0).saturating_mul(t.into()))
            // Standard Error: 107_579
            .saturating_add(Weight::from_parts(13_869_639, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(167))
            .saturating_add(T::DbWeight::get().reads((81_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(163))
            .saturating_add(T::DbWeight::get().writes((81_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1602 w:1602)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1601 w:1600)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1600 w:1600)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1512 + r * (25573 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 543_001 nanoseconds.
        Weight::from_parts(593_271_000, 0)
            // Standard Error: 75_051_630
            .saturating_add(Weight::from_parts(61_709_863_004, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().reads((400_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(5))
            .saturating_add(T::DbWeight::get().writes((400_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:82 w:82)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `i` is `[0, 960]`.
    /// The range of component `s` is `[0, 960]`.
    fn seal_instantiate_per_transfer_input_salt_kb(t: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5505 + t * (68 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 198_323_873 nanoseconds.
        Weight::from_parts(8_482_437_089, 0)
            // Standard Error: 473_750_492
            .saturating_add(Weight::from_parts(1_198_807_215, 0).saturating_mul(t.into()))
            // Standard Error: 772_554
            .saturating_add(Weight::from_parts(213_368_181, 0).saturating_mul(i.into()))
            // Standard Error: 772_554
            .saturating_add(Weight::from_parts(211_682_191, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(249))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(247))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_sha2_256(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `691 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_132 nanoseconds.
        Weight::from_parts(676_132_087, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_sha2_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1493`
        //  Estimated: `0`
        // Minimum execution time: 583_172 nanoseconds.
        Weight::from_parts(654_967_242, 0)
            // Standard Error: 193_658
            .saturating_add(Weight::from_parts(91_163_648, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_keccak_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 532_132 nanoseconds.
        Weight::from_parts(677_504_183, 0)
            // Standard Error: 11_506_745
            .saturating_add(Weight::from_parts(100_381_316, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_keccak_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 620_762 nanoseconds.
        Weight::from_parts(208_832_043, 0)
            // Standard Error: 638_611
            .saturating_add(Weight::from_parts(356_290_502, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 531_411 nanoseconds.
        Weight::from_parts(663_543_053, 0)
            // Standard Error: 11_568_076
            .saturating_add(Weight::from_parts(47_810_346, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 588_752 nanoseconds.
        Weight::from_parts(614_542_000, 0)
            // Standard Error: 177_639
            .saturating_add(Weight::from_parts(161_643_433, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_128(_r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 530_851 nanoseconds.
        Weight::from_parts(667_968_451, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_128_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 585_602 nanoseconds.
        Weight::from_parts(658_555_116, 0)
            // Standard Error: 279_324
            .saturating_add(Weight::from_parts(159_288_859, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_recover(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `737 + r * (6083 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 535_382 nanoseconds.
        Weight::from_parts(670_345_814, 0)
            // Standard Error: 12_790_892
            .saturating_add(Weight::from_parts(5_618_499_485, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_to_eth_address(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (3362 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 534_352 nanoseconds.
        Weight::from_parts(655_424_953, 0)
            // Standard Error: 10_053_361
            .saturating_add(Weight::from_parts(1_196_174_946, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1538 w:1538)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_set_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + r * (79300 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 535_492 nanoseconds.
        Weight::from_parts(570_292_000, 0)
            // Standard Error: 9_317_085
            .saturating_add(Weight::from_parts(2_915_076_582, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((225_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((150_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_reentrance_count(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `689 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 537_632 nanoseconds.
        Weight::from_parts(657_899_518, 0)
            // Standard Error: 481_203
            .saturating_add(Weight::from_parts(22_629_133, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_account_reentrance_count(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1387 + r * (3140 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 539_212 nanoseconds.
        Weight::from_parts(734_683_366, 0)
            // Standard Error: 499_077
            .saturating_add(Weight::from_parts(34_230_055, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiation_nonce(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 542_631 nanoseconds.
        Weight::from_parts(668_665_110, 0)
            // Standard Error: 482_581
            .saturating_add(Weight::from_parts(18_074_689, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64const(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(2_955_102, 0)
            // Standard Error: 6_860
            .saturating_add(Weight::from_parts(592_425, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64load(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_730 nanoseconds.
        Weight::from_parts(10_644_917, 0)
            // Standard Error: 25_684
            .saturating_add(Weight::from_parts(1_679_787, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64store(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_880 nanoseconds.
        Weight::from_parts(6_059_713, 0)
            // Standard Error: 29_527
            .saturating_add(Weight::from_parts(1_743_677, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_select(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_600 nanoseconds.
        Weight::from_parts(2_399_198, 0)
            // Standard Error: 13_033
            .saturating_add(Weight::from_parts(1_580_765, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_if(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_390 nanoseconds.
        Weight::from_parts(62_941, 0)
            // Standard Error: 21_738
            .saturating_add(Weight::from_parts(2_766_819, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_640 nanoseconds.
        Weight::from_parts(2_534_460, 0)
            // Standard Error: 8_493
            .saturating_add(Weight::from_parts(926_397, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_if(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(1_997_345, 0)
            // Standard Error: 11_639
            .saturating_add(Weight::from_parts(1_327_716, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_table(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_500 nanoseconds.
        Weight::from_parts(1_603_143, 0)
            // Standard Error: 11_826
            .saturating_add(Weight::from_parts(1_679_173, 0).saturating_mul(r.into()))
    }
    /// The range of component `e` is `[1, 256]`.
    fn instr_br_table_per_entry(e: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_740 nanoseconds.
        Weight::from_parts(6_848_621, 0)
            // Standard Error: 345
            .saturating_add(Weight::from_parts(5_503, 0).saturating_mul(e.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(7_424_094, 0)
            // Standard Error: 34_669
            .saturating_add(Weight::from_parts(4_915_951, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call_indirect(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_850 nanoseconds.
        Weight::from_parts(6_753_900, 0)
            // Standard Error: 48_303
            .saturating_add(Weight::from_parts(5_582_232, 0).saturating_mul(r.into()))
    }
    /// The range of component `p` is `[0, 128]`.
    fn instr_call_indirect_per_param(p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 7_630 nanoseconds.
        Weight::from_parts(11_477_522, 0)
            // Standard Error: 3_997
            .saturating_add(Weight::from_parts(324_801, 0).saturating_mul(p.into()))
    }
    /// The range of component `l` is `[0, 1024]`.
    fn instr_call_per_local(l: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 6_320 nanoseconds.
        Weight::from_parts(13_022_522, 0)
            // Standard Error: 2_869
            .saturating_add(Weight::from_parts(171_599, 0).saturating_mul(l.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_get(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_500 nanoseconds.
        Weight::from_parts(7_235_171, 0)
            // Standard Error: 7_322
            .saturating_add(Weight::from_parts(722_209, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_460 nanoseconds.
        Weight::from_parts(6_543_158, 0)
            // Standard Error: 9_723
            .saturating_add(Weight::from_parts(1_075_029, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_tee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 4_660 nanoseconds.
        Weight::from_parts(6_543_532, 0)
            // Standard Error: 10_775
            .saturating_add(Weight::from_parts(1_286_049, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_get(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_740 nanoseconds.
        Weight::from_parts(5_132_745, 0)
            // Standard Error: 11_822
            .saturating_add(Weight::from_parts(1_335_886, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_550 nanoseconds.
        Weight::from_parts(2_308_029, 0)
            // Standard Error: 13_767
            .saturating_add(Weight::from_parts(1_812_020, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_memory_current(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_940 nanoseconds.
        Weight::from_parts(1_188_446, 0)
            // Standard Error: 17_898
            .saturating_add(Weight::from_parts(1_367_101, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 1]`.
    fn instr_memory_grow(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_620 nanoseconds.
        Weight::from_parts(2_001_616, 0)
            // Standard Error: 1_874_724
            .saturating_add(Weight::from_parts(405_491_583, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64clz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_600 nanoseconds.
        Weight::from_parts(3_615_630, 0)
            // Standard Error: 8_138
            .saturating_add(Weight::from_parts(861_404, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ctz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(2_724_879, 0)
            // Standard Error: 8_882
            .saturating_add(Weight::from_parts(865_619, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64popcnt(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_770 nanoseconds.
        Weight::from_parts(3_299_778, 0)
            // Standard Error: 9_856
            .saturating_add(Weight::from_parts(875_967, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eqz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_650 nanoseconds.
        Weight::from_parts(2_361_703, 0)
            // Standard Error: 12_413
            .saturating_add(Weight::from_parts(905_102, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendsi32(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(2_740_861, 0)
            // Standard Error: 8_377
            .saturating_add(Weight::from_parts(935_400, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendui32(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(4_248_233, 0)
            // Standard Error: 8_536
            .saturating_add(Weight::from_parts(880_675, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i32wrapi64(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(2_308_635, 0)
            // Standard Error: 11_590
            .saturating_add(Weight::from_parts(926_551, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eq(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_600 nanoseconds.
        Weight::from_parts(3_635_193, 0)
            // Standard Error: 13_678
            .saturating_add(Weight::from_parts(1_135_022, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ne(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(4_333_685, 0)
            // Standard Error: 11_208
            .saturating_add(Weight::from_parts(1_117_647, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64lts(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_420 nanoseconds.
        Weight::from_parts(3_017_200, 0)
            // Standard Error: 14_098
            .saturating_add(Weight::from_parts(1_156_701, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ltu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_470 nanoseconds.
        Weight::from_parts(2_813_602, 0)
            // Standard Error: 14_605
            .saturating_add(Weight::from_parts(1_187_315, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gts(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_410 nanoseconds.
        Weight::from_parts(4_405_895, 0)
            // Standard Error: 14_237
            .saturating_add(Weight::from_parts(1_136_192, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gtu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_580 nanoseconds.
        Weight::from_parts(4_529_323, 0)
            // Standard Error: 12_311
            .saturating_add(Weight::from_parts(1_109_286, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64les(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_400 nanoseconds.
        Weight::from_parts(2_160_653, 0)
            // Standard Error: 12_773
            .saturating_add(Weight::from_parts(1_177_547, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64leu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_570 nanoseconds.
        Weight::from_parts(2_052_661, 0)
            // Standard Error: 14_481
            .saturating_add(Weight::from_parts(1_179_417, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ges(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_640 nanoseconds.
        Weight::from_parts(3_584_030, 0)
            // Standard Error: 13_594
            .saturating_add(Weight::from_parts(1_135_684, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64geu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(3_398_760, 0)
            // Standard Error: 9_956
            .saturating_add(Weight::from_parts(1_136_977, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64add(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(2_489_958, 0)
            // Standard Error: 10_550
            .saturating_add(Weight::from_parts(1_148_385, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64sub(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_470 nanoseconds.
        Weight::from_parts(2_184_614, 0)
            // Standard Error: 13_847
            .saturating_add(Weight::from_parts(1_158_666, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64mul(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_620 nanoseconds.
        Weight::from_parts(3_821_258, 0)
            // Standard Error: 14_517
            .saturating_add(Weight::from_parts(1_151_944, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divs(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_640 nanoseconds.
        Weight::from_parts(4_219_927, 0)
            // Standard Error: 14_360
            .saturating_add(Weight::from_parts(1_269_226, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_610 nanoseconds.
        Weight::from_parts(4_103_772, 0)
            // Standard Error: 13_814
            .saturating_add(Weight::from_parts(1_166_162, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rems(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(2_837_444, 0)
            // Standard Error: 11_492
            .saturating_add(Weight::from_parts(1_353_230, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64remu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_390 nanoseconds.
        Weight::from_parts(2_324_540, 0)
            // Standard Error: 12_241
            .saturating_add(Weight::from_parts(1_260_290, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64and(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_410 nanoseconds.
        Weight::from_parts(3_622_678, 0)
            // Standard Error: 11_988
            .saturating_add(Weight::from_parts(1_108_472, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64or(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_370 nanoseconds.
        Weight::from_parts(1_528_294, 0)
            // Standard Error: 13_141
            .saturating_add(Weight::from_parts(1_216_523, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64xor(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_560 nanoseconds.
        Weight::from_parts(3_488_953, 0)
            // Standard Error: 10_562
            .saturating_add(Weight::from_parts(1_128_100, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shl(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(3_112_301, 0)
            // Standard Error: 12_563
            .saturating_add(Weight::from_parts(1_158_825, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shrs(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(2_421_867, 0)
            // Standard Error: 10_727
            .saturating_add(Weight::from_parts(1_162_108, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shru(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_470 nanoseconds.
        Weight::from_parts(3_888_383, 0)
            // Standard Error: 12_429
            .saturating_add(Weight::from_parts(1_115_583, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotl(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_410 nanoseconds.
        Weight::from_parts(2_561_771, 0)
            // Standard Error: 10_053
            .saturating_add(Weight::from_parts(1_161_925, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotr(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_420 nanoseconds.
        Weight::from_parts(3_075_199, 0)
            // Standard Error: 12_838
            .saturating_add(Weight::from_parts(1_171_290, 0).saturating_mul(r.into()))
    }
}

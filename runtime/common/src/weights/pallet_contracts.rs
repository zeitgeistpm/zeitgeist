// Copyright 2022-2024 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2024-04-15`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zeitgeist-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_contracts (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
    /// Storage: Contracts DeletionQueue (r:1 w:0)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    fn on_process_deletion_queue_batch() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 7_430 nanoseconds.
        Weight::from_parts(7_771_000, 0).saturating_add(T::DbWeight::get().reads(1))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `k` is `[0, 1024]`.
    fn on_initialize_per_trie_key(k: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `414 + k * (69 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 19_010 nanoseconds.
        Weight::from_parts(231_178, 0)
            // Standard Error: 7_979
            .saturating_add(Weight::from_parts(2_022_917, 0).saturating_mul(k.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
    }
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// The range of component `q` is `[0, 128]`.
    fn on_initialize_per_queue_item(q: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `214 + q * (33 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 7_500 nanoseconds.
        Weight::from_parts(27_206_849, 0)
            // Standard Error: 16_209
            .saturating_add(Weight::from_parts(2_358_921, 0).saturating_mul(q.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts PristineCode (r:1 w:0)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn reinstrument(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `203 + c * (1 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 60_631 nanoseconds.
        Weight::from_parts(96_254_618, 0)
            // Standard Error: 269
            .saturating_add(Weight::from_parts(112_614, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `c` is `[0, 125952]`.
    fn call_with_code_per_byte(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `675`
        //  Estimated: `0`
        // Minimum execution time: 489_121 nanoseconds.
        Weight::from_parts(665_502_356, 0)
            // Standard Error: 129
            .saturating_add(Weight::from_parts(64_354, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate_with_code(c: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `157`
        //  Estimated: `0`
        // Minimum execution time: 7_344_163 nanoseconds.
        Weight::from_parts(1_338_150_199, 0)
            // Standard Error: 519
            .saturating_add(Weight::from_parts(203_646, 0).saturating_mul(c.into()))
            // Standard Error: 30
            .saturating_add(Weight::from_parts(2_832, 0).saturating_mul(i.into()))
            // Standard Error: 30
            .saturating_add(Weight::from_parts(3_129, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(9))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate(i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `433`
        //  Estimated: `0`
        // Minimum execution time: 2_937_909 nanoseconds.
        Weight::from_parts(891_169_449, 0)
            // Standard Error: 44
            .saturating_add(Weight::from_parts(2_010, 0).saturating_mul(i.into()))
            // Standard Error: 44
            .saturating_add(Weight::from_parts(3_159, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(7))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn call() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `727`
        //  Estimated: `0`
        // Minimum execution time: 227_451 nanoseconds.
        Weight::from_parts(280_790_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn upload_code(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 471_521 nanoseconds.
        Weight::from_parts(687_711_884, 0)
            // Standard Error: 394
            .saturating_add(Weight::from_parts(200_341, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    fn remove_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `218`
        //  Estimated: `0`
        // Minimum execution time: 36_600 nanoseconds.
        Weight::from_parts(44_600_000, 0)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:2 w:2)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn set_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `567`
        //  Estimated: `0`
        // Minimum execution time: 48_240 nanoseconds.
        Weight::from_parts(58_330_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(6))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `697 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 431_852 nanoseconds.
        Weight::from_parts(517_954_911, 0)
            // Standard Error: 272_523
            .saturating_add(Weight::from_parts(41_775_023, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_is_contract(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `749 + r * (19218 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 370_081 nanoseconds.
        Weight::from_parts(208_937_394, 0)
            // Standard Error: 1_926_054
            .saturating_add(Weight::from_parts(539_165_423, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `741 + r * (19539 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 373_452 nanoseconds.
        Weight::from_parts(227_921_076, 0)
            // Standard Error: 1_913_473
            .saturating_add(Weight::from_parts(631_118_111, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_own_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `704 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 379_931 nanoseconds.
        Weight::from_parts(528_666_677, 0)
            // Standard Error: 374_987
            .saturating_add(Weight::from_parts(50_992_877, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller_is_origin(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 373_091 nanoseconds.
        Weight::from_parts(502_021_184, 0)
            // Standard Error: 406_594
            .saturating_add(Weight::from_parts(27_810_692, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_address(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `698 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 383_501 nanoseconds.
        Weight::from_parts(541_475_815, 0)
            // Standard Error: 379_203
            .saturating_add(Weight::from_parts(39_598_712, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas_left(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `699 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 387_450 nanoseconds.
        Weight::from_parts(529_951_635, 0)
            // Standard Error: 392_749
            .saturating_add(Weight::from_parts(40_284_485, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:2 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_balance(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `873 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 412_591 nanoseconds.
        Weight::from_parts(571_653_506, 0)
            // Standard Error: 470_423
            .saturating_add(Weight::from_parts(179_738_554, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_value_transferred(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `708 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 395_131 nanoseconds.
        Weight::from_parts(527_037_547, 0)
            // Standard Error: 354_055
            .saturating_add(Weight::from_parts(40_615_465, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_minimum_balance(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 380_230 nanoseconds.
        Weight::from_parts(531_816_816, 0)
            // Standard Error: 333_964
            .saturating_add(Weight::from_parts(37_754_742, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_block_number(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 390_151 nanoseconds.
        Weight::from_parts(577_277_614, 0)
            // Standard Error: 503_035
            .saturating_add(Weight::from_parts(36_413_279, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_now(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 376_551 nanoseconds.
        Weight::from_parts(535_008_554, 0)
            // Standard Error: 353_325
            .saturating_add(Weight::from_parts(38_594_722, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
    /// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_weight_to_fee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `809 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 397_911 nanoseconds.
        Weight::from_parts(528_491_853, 0)
            // Standard Error: 429_636
            .saturating_add(Weight::from_parts(134_755_404, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `661 + r * (320 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 214_380 nanoseconds.
        Weight::from_parts(260_658_643, 0)
            // Standard Error: 160_864
            .saturating_add(Weight::from_parts(18_814_649, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_input(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `696 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 403_660 nanoseconds.
        Weight::from_parts(545_823_848, 0)
            // Standard Error: 357_639
            .saturating_add(Weight::from_parts(32_529_346, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_input_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1176`
        //  Estimated: `0`
        // Minimum execution time: 486_961 nanoseconds.
        Weight::from_parts(420_704_430, 0)
            // Standard Error: 126_136
            .saturating_add(Weight::from_parts(18_130_065, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_return(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `684 + r * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 367_101 nanoseconds.
        Weight::from_parts(508_054_206, 0)
            // Standard Error: 9_076_081
            .saturating_add(Weight::from_parts(100_993, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_return_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694`
        //  Estimated: `0`
        // Minimum execution time: 417_570 nanoseconds.
        Weight::from_parts(486_804_833, 0)
            // Standard Error: 8_373
            .saturating_add(Weight::from_parts(411_815, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:3 w:3)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_terminate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `726 + r * (285 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 370_770 nanoseconds.
        Weight::from_parts(515_893_028, 0)
            // Standard Error: 9_505_249
            .saturating_add(Weight::from_parts(191_277_471, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
    /// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_random(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `775 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 389_531 nanoseconds.
        Weight::from_parts(506_659_987, 0)
            // Standard Error: 438_015
            .saturating_add(Weight::from_parts(222_549_692, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_deposit_event(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 419_771 nanoseconds.
        Weight::from_parts(556_814_111, 0)
            // Standard Error: 666_560
            .saturating_add(Weight::from_parts(423_936_920, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:322 w:322)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 4]`.
    /// The range of component `n` is `[0, 16]`.
    fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1630 + t * (2608 ±0) + n * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 1_916_644 nanoseconds.
        Weight::from_parts(876_255_548, 0)
            // Standard Error: 2_998_126
            .saturating_add(Weight::from_parts(365_874_853, 0).saturating_mul(t.into()))
            // Standard Error: 823_430
            .saturating_add(Weight::from_parts(120_543_255, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_debug_message(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 211_061 nanoseconds.
        Weight::from_parts(291_579_010, 0)
            // Standard Error: 162_749
            .saturating_add(Weight::from_parts(27_900_831, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_set_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `720 + r * (23420 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_560 nanoseconds.
        Weight::from_parts(334_860_847, 0)
            // Standard Error: 3_068_197
            .saturating_add(Weight::from_parts(978_042_416, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_new_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `12402 + n * (12006 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 683_562 nanoseconds.
        Weight::from_parts(1_224_575_174, 0)
            // Standard Error: 3_929_725
            .saturating_add(Weight::from_parts(196_261_071, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(52))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(50))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_old_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14990 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 597_481 nanoseconds.
        Weight::from_parts(1_153_785_439, 0)
            // Standard Error: 3_312_108
            .saturating_add(Weight::from_parts(128_606_117, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(49))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_clear_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `720 + r * (23100 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 441_841 nanoseconds.
        Weight::from_parts(479_192_193, 0)
            // Standard Error: 2_871_558
            .saturating_add(Weight::from_parts(916_912_022, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_clear_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14670 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 625_381 nanoseconds.
        Weight::from_parts(1_137_973_256, 0)
            // Standard Error: 3_381_124
            .saturating_add(Weight::from_parts(130_713_708, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(48))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_get_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `730 + r * (23740 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 392_901 nanoseconds.
        Weight::from_parts(479_938_978, 0)
            // Standard Error: 1_934_626
            .saturating_add(Weight::from_parts(754_683_224, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_get_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `15321 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 509_251 nanoseconds.
        Weight::from_parts(1_059_139_703, 0)
            // Standard Error: 3_539_218
            .saturating_add(Weight::from_parts(303_187_136, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_contains_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `723 + r * (23100 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 458_631 nanoseconds.
        Weight::from_parts(506_503_466, 0)
            // Standard Error: 1_926_675
            .saturating_add(Weight::from_parts(728_611_813, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_contains_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14673 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 525_181 nanoseconds.
        Weight::from_parts(1_030_715_942, 0)
            // Standard Error: 3_301_932
            .saturating_add(Weight::from_parts(122_011_584, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_take_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `731 + r * (23740 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 414_821 nanoseconds.
        Weight::from_parts(357_950_744, 0)
            // Standard Error: 3_475_365
            .saturating_add(Weight::from_parts(981_471_555, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_take_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `15322 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 638_781 nanoseconds.
        Weight::from_parts(1_188_783_395, 0)
            // Standard Error: 3_951_294
            .saturating_add(Weight::from_parts(314_100_376, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(48))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: System Account (r:1602 w:1601)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_transfer(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1322 + r * (3601 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 389_761 nanoseconds.
        Weight::from_parts(387_985_694, 0)
            // Standard Error: 2_529_933
            .saturating_add(Weight::from_parts(2_615_792_463, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(4))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `948 + r * (20495 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 435_761 nanoseconds.
        Weight::from_parts(68_471_501, 0)
            // Standard Error: 94_851_428
            .saturating_add(Weight::from_parts(38_479_425_365, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().reads((160_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((160_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1537 w:1537)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_delegate_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + r * (71670 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 382_431 nanoseconds.
        Weight::from_parts(477_811_000, 0)
            // Standard Error: 42_244_071
            .saturating_add(Weight::from_parts(36_082_816_111, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((150_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((75_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:82 w:81)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `c` is `[0, 1024]`.
    fn seal_call_per_transfer_clone_kb(t: u32, c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `21128 + t * (15897 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 18_273_642 nanoseconds.
        Weight::from_parts(17_523_937_499, 0)
            // Standard Error: 89_878_407
            .saturating_add(Weight::from_parts(2_045_724_783, 0).saturating_mul(t.into()))
            // Standard Error: 134_767
            .saturating_add(Weight::from_parts(18_073_327, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(167))
            .saturating_add(T::DbWeight::get().reads((81_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(163))
            .saturating_add(T::DbWeight::get().writes((81_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1602 w:1602)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1601 w:1600)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1600 w:1600)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1512 + r * (25573 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 376_711 nanoseconds.
        Weight::from_parts(455_542_000, 0)
            // Standard Error: 114_095_743
            .saturating_add(Weight::from_parts(50_953_615_612, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().reads((400_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(5))
            .saturating_add(T::DbWeight::get().writes((400_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:82 w:82)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `i` is `[0, 960]`.
    /// The range of component `s` is `[0, 960]`.
    fn seal_instantiate_per_transfer_input_salt_kb(t: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5505 + t * (68 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 210_322_618 nanoseconds.
        Weight::from_parts(31_023_451_273, 0)
            // Standard Error: 648_986
            .saturating_add(Weight::from_parts(213_692_481, 0).saturating_mul(i.into()))
            // Standard Error: 648_986
            .saturating_add(Weight::from_parts(217_643_843, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(249))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(247))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_sha2_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `691 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 370_871 nanoseconds.
        Weight::from_parts(517_046_881, 0)
            // Standard Error: 9_392_544
            .saturating_add(Weight::from_parts(1_484_618, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_sha2_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1493`
        //  Estimated: `0`
        // Minimum execution time: 435_121 nanoseconds.
        Weight::from_parts(502_631_000, 0)
            // Standard Error: 81_123
            .saturating_add(Weight::from_parts(94_181_133, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_keccak_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_401 nanoseconds.
        Weight::from_parts(558_599_716, 0)
            // Standard Error: 10_105_961
            .saturating_add(Weight::from_parts(103_731_083, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_keccak_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 537_732 nanoseconds.
        Weight::from_parts(579_512_000, 0)
            // Standard Error: 208_304
            .saturating_add(Weight::from_parts(369_317_236, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 368_311 nanoseconds.
        Weight::from_parts(507_392_248, 0)
            // Standard Error: 8_916_313
            .saturating_add(Weight::from_parts(108_580_551, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 522_392 nanoseconds.
        Weight::from_parts(567_922_000, 0)
            // Standard Error: 111_886
            .saturating_add(Weight::from_parts(163_798_185, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_128(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 366_951 nanoseconds.
        Weight::from_parts(500_280_304, 0)
            // Standard Error: 9_646_663
            .saturating_add(Weight::from_parts(51_759_095, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_128_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 540_452 nanoseconds.
        Weight::from_parts(603_082_000, 0)
            // Standard Error: 162_534
            .saturating_add(Weight::from_parts(166_126_166, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_recover(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `737 + r * (6083 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_331 nanoseconds.
        Weight::from_parts(500_234_279, 0)
            // Standard Error: 9_708_530
            .saturating_add(Weight::from_parts(6_049_554_620, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_to_eth_address(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (3362 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 370_281 nanoseconds.
        Weight::from_parts(487_345_571, 0)
            // Standard Error: 8_255_395
            .saturating_add(Weight::from_parts(1_383_599_828, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1538 w:1538)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_set_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + r * (79300 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 468_402 nanoseconds.
        Weight::from_parts(491_662_000, 0)
            // Standard Error: 11_442_378
            .saturating_add(Weight::from_parts(3_208_414_115, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((225_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((150_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_reentrance_count(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `689 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 418_421 nanoseconds.
        Weight::from_parts(536_436_097, 0)
            // Standard Error: 310_626
            .saturating_add(Weight::from_parts(20_913_646, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_account_reentrance_count(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1387 + r * (3140 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 397_661 nanoseconds.
        Weight::from_parts(613_318_772, 0)
            // Standard Error: 378_470
            .saturating_add(Weight::from_parts(29_430_515, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiation_nonce(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 369_881 nanoseconds.
        Weight::from_parts(476_815_394, 0)
            // Standard Error: 269_936
            .saturating_add(Weight::from_parts(18_315_800, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64const(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_780 nanoseconds.
        Weight::from_parts(3_136_743, 0)
            // Standard Error: 4_188
            .saturating_add(Weight::from_parts(621_351, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64load(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_770 nanoseconds.
        Weight::from_parts(9_352_462, 0)
            // Standard Error: 15_166
            .saturating_add(Weight::from_parts(1_557_402, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64store(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_860 nanoseconds.
        Weight::from_parts(8_180_062, 0)
            // Standard Error: 13_817
            .saturating_add(Weight::from_parts(1_622_066, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_select(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(2_551_334, 0)
            // Standard Error: 11_841
            .saturating_add(Weight::from_parts(1_665_255, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_if(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_480 nanoseconds.
        Weight::from_parts(2_191_446, 0)
            // Standard Error: 12_533
            .saturating_add(Weight::from_parts(2_098_157, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(1_945_536, 0)
            // Standard Error: 6_420
            .saturating_add(Weight::from_parts(984_796, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_if(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_520 nanoseconds.
        Weight::from_parts(1_854_661, 0)
            // Standard Error: 7_036
            .saturating_add(Weight::from_parts(1_381_991, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_table(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_531 nanoseconds.
        Weight::from_parts(1_429_591, 0)
            // Standard Error: 8_514
            .saturating_add(Weight::from_parts(1_816_297, 0).saturating_mul(r.into()))
    }
    /// The range of component `e` is `[1, 256]`.
    fn instr_br_table_per_entry(e: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_630 nanoseconds.
        Weight::from_parts(7_467_038, 0)
            // Standard Error: 333
            .saturating_add(Weight::from_parts(4_907, 0).saturating_mul(e.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_560 nanoseconds.
        Weight::from_parts(1_650_551, 0)
            // Standard Error: 35_615
            .saturating_add(Weight::from_parts(5_246_652, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call_indirect(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_790 nanoseconds.
        Weight::from_parts(8_229_172, 0)
            // Standard Error: 36_662
            .saturating_add(Weight::from_parts(5_895_045, 0).saturating_mul(r.into()))
    }
    /// The range of component `p` is `[0, 128]`.
    fn instr_call_indirect_per_param(p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 7_690 nanoseconds.
        Weight::from_parts(13_888_593, 0)
            // Standard Error: 3_490
            .saturating_add(Weight::from_parts(312_955, 0).saturating_mul(p.into()))
    }
    /// The range of component `l` is `[0, 1024]`.
    fn instr_call_per_local(l: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 7_050 nanoseconds.
        Weight::from_parts(8_811_701, 0)
            // Standard Error: 656
            .saturating_add(Weight::from_parts(93_440, 0).saturating_mul(l.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_get(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_840 nanoseconds.
        Weight::from_parts(5_853_123, 0)
            // Standard Error: 6_625
            .saturating_add(Weight::from_parts(765_633, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_340 nanoseconds.
        Weight::from_parts(4_113_945, 0)
            // Standard Error: 8_909
            .saturating_add(Weight::from_parts(1_198_001, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_tee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_970 nanoseconds.
        Weight::from_parts(4_643_752, 0)
            // Standard Error: 9_875
            .saturating_add(Weight::from_parts(1_463_310, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_get(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_620 nanoseconds.
        Weight::from_parts(2_315_667, 0)
            // Standard Error: 13_076
            .saturating_add(Weight::from_parts(2_015_150, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_600 nanoseconds.
        Weight::from_parts(1_483_134, 0)
            // Standard Error: 11_873
            .saturating_add(Weight::from_parts(2_058_012, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_memory_current(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_990 nanoseconds.
        Weight::from_parts(3_095_465, 0)
            // Standard Error: 10_245
            .saturating_add(Weight::from_parts(1_332_117, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 1]`.
    fn instr_memory_grow(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_480 nanoseconds.
        Weight::from_parts(1_934_187, 0)
            // Standard Error: 1_165_957
            .saturating_add(Weight::from_parts(352_987_712, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64clz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_830 nanoseconds.
        Weight::from_parts(3_764_219, 0)
            // Standard Error: 7_276
            .saturating_add(Weight::from_parts(908_339, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ctz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_440 nanoseconds.
        Weight::from_parts(2_932_299, 0)
            // Standard Error: 6_288
            .saturating_add(Weight::from_parts(927_100, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64popcnt(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_810 nanoseconds.
        Weight::from_parts(3_383_481, 0)
            // Standard Error: 6_988
            .saturating_add(Weight::from_parts(911_269, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eqz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_690 nanoseconds.
        Weight::from_parts(2_921_686, 0)
            // Standard Error: 5_839
            .saturating_add(Weight::from_parts(943_173, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendsi32(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_500 nanoseconds.
        Weight::from_parts(2_623_859, 0)
            // Standard Error: 6_524
            .saturating_add(Weight::from_parts(928_298, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendui32(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_550 nanoseconds.
        Weight::from_parts(4_627_690, 0)
            // Standard Error: 8_179
            .saturating_add(Weight::from_parts(863_051, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i32wrapi64(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_550 nanoseconds.
        Weight::from_parts(2_595_110, 0)
            // Standard Error: 6_474
            .saturating_add(Weight::from_parts(928_065, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eq(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(3_894_235, 0)
            // Standard Error: 8_463
            .saturating_add(Weight::from_parts(1_219_500, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ne(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(2_563_440, 0)
            // Standard Error: 8_687
            .saturating_add(Weight::from_parts(1_247_172, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64lts(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_740 nanoseconds.
        Weight::from_parts(3_152_891, 0)
            // Standard Error: 8_071
            .saturating_add(Weight::from_parts(1_248_541, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ltu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_520 nanoseconds.
        Weight::from_parts(3_388_594, 0)
            // Standard Error: 9_001
            .saturating_add(Weight::from_parts(1_217_995, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gts(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_740 nanoseconds.
        Weight::from_parts(1_635_986, 0)
            // Standard Error: 6_243
            .saturating_add(Weight::from_parts(1_305_180, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gtu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_710 nanoseconds.
        Weight::from_parts(2_638_243, 0)
            // Standard Error: 5_966
            .saturating_add(Weight::from_parts(1_275_338, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64les(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(3_146_830, 0)
            // Standard Error: 8_968
            .saturating_add(Weight::from_parts(1_227_357, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64leu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_460 nanoseconds.
        Weight::from_parts(3_252_838, 0)
            // Standard Error: 7_613
            .saturating_add(Weight::from_parts(1_246_230, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ges(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_530 nanoseconds.
        Weight::from_parts(2_491_422, 0)
            // Standard Error: 7_290
            .saturating_add(Weight::from_parts(1_279_578, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64geu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_480 nanoseconds.
        Weight::from_parts(1_696_914, 0)
            // Standard Error: 7_284
            .saturating_add(Weight::from_parts(1_291_501, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64add(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_720 nanoseconds.
        Weight::from_parts(3_244_000, 0)
            // Standard Error: 8_247
            .saturating_add(Weight::from_parts(1_223_730, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64sub(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_740 nanoseconds.
        Weight::from_parts(2_339_735, 0)
            // Standard Error: 6_588
            .saturating_add(Weight::from_parts(1_275_672, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64mul(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_760 nanoseconds.
        Weight::from_parts(3_085_111, 0)
            // Standard Error: 7_619
            .saturating_add(Weight::from_parts(1_248_370, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divs(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_490 nanoseconds.
        Weight::from_parts(2_468_536, 0)
            // Standard Error: 9_812
            .saturating_add(Weight::from_parts(1_454_375, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_520 nanoseconds.
        Weight::from_parts(3_650_517, 0)
            // Standard Error: 9_928
            .saturating_add(Weight::from_parts(1_207_003, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rems(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_470 nanoseconds.
        Weight::from_parts(1_449_755, 0)
            // Standard Error: 9_386
            .saturating_add(Weight::from_parts(1_576_210, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64remu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_530 nanoseconds.
        Weight::from_parts(3_604_036, 0)
            // Standard Error: 9_582
            .saturating_add(Weight::from_parts(1_387_067, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64and(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(3_741_153, 0)
            // Standard Error: 9_330
            .saturating_add(Weight::from_parts(1_187_944, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64or(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_550 nanoseconds.
        Weight::from_parts(1_900_000, 0)
            // Standard Error: 23_251
            .saturating_add(Weight::from_parts(1_513_468, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64xor(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(2_921_475, 0)
            // Standard Error: 7_444
            .saturating_add(Weight::from_parts(1_249_617, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shl(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_780 nanoseconds.
        Weight::from_parts(3_548_981, 0)
            // Standard Error: 7_767
            .saturating_add(Weight::from_parts(1_242_323, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shrs(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_710 nanoseconds.
        Weight::from_parts(1_904_247, 0)
            // Standard Error: 7_361
            .saturating_add(Weight::from_parts(1_279_805, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shru(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(1_679_219, 0)
            // Standard Error: 6_529
            .saturating_add(Weight::from_parts(1_291_802, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotl(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_720 nanoseconds.
        Weight::from_parts(3_744_484, 0)
            // Standard Error: 8_338
            .saturating_add(Weight::from_parts(1_227_022, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotr(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_500 nanoseconds.
        Weight::from_parts(3_433_997, 0)
            // Standard Error: 8_899
            .saturating_add(Weight::from_parts(1_211_884, 0).saturating_mul(r.into()))
    }
}

// Copyright 2022-2024 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_contracts
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2024-04-02`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zeitgeist-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_contracts
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_contracts (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_contracts::weights::WeightInfo for WeightInfo<T> {
    /// Storage: Contracts DeletionQueue (r:1 w:0)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    fn on_process_deletion_queue_batch() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 6_110 nanoseconds.
        Weight::from_parts(6_490_000, 0).saturating_add(T::DbWeight::get().reads(1))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `k` is `[0, 1024]`.
    fn on_initialize_per_trie_key(k: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `414 + k * (69 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 18_090 nanoseconds.
        Weight::from_parts(22_395_669, 0)
            // Standard Error: 10_251
            .saturating_add(Weight::from_parts(1_733_823, 0).saturating_mul(k.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(k.into())))
    }
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// The range of component `q` is `[0, 128]`.
    fn on_initialize_per_queue_item(q: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `214 + q * (33 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 6_440 nanoseconds.
        Weight::from_parts(17_633_322, 0)
            // Standard Error: 18_172
            .saturating_add(Weight::from_parts(2_046_769, 0).saturating_mul(q.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts PristineCode (r:1 w:0)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn reinstrument(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `203 + c * (1 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 50_040 nanoseconds.
        Weight::from_parts(66_118_566, 0)
            // Standard Error: 339
            .saturating_add(Weight::from_parts(101_168, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `c` is `[0, 125952]`.
    fn call_with_code_per_byte(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `675`
        //  Estimated: `0`
        // Minimum execution time: 384_991 nanoseconds.
        Weight::from_parts(474_640_398, 0)
            // Standard Error: 210
            .saturating_add(Weight::from_parts(59_024, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate_with_code(c: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `157`
        //  Estimated: `0`
        // Minimum execution time: 6_569_301 nanoseconds.
        Weight::from_parts(1_111_140_649, 0)
            // Standard Error: 728
            .saturating_add(Weight::from_parts(189_058, 0).saturating_mul(c.into()))
            // Standard Error: 42
            .saturating_add(Weight::from_parts(2_510, 0).saturating_mul(i.into()))
            // Standard Error: 42
            .saturating_add(Weight::from_parts(3_132, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(9))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `i` is `[0, 1048576]`.
    /// The range of component `s` is `[0, 1048576]`.
    fn instantiate(i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `433`
        //  Estimated: `0`
        // Minimum execution time: 2_391_049 nanoseconds.
        Weight::from_parts(705_609_295, 0)
            // Standard Error: 44
            .saturating_add(Weight::from_parts(1_900, 0).saturating_mul(i.into()))
            // Standard Error: 44
            .saturating_add(Weight::from_parts(2_956, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().writes(7))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn call() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `727`
        //  Estimated: `0`
        // Minimum execution time: 209_711 nanoseconds.
        Weight::from_parts(255_811_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts CodeStorage (r:1 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:0 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// The range of component `c` is `[0, 61717]`.
    fn upload_code(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `0`
        // Minimum execution time: 391_302 nanoseconds.
        Weight::from_parts(510_442_008, 0)
            // Standard Error: 434
            .saturating_add(Weight::from_parts(181_832, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1 w:1)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:0 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Contracts PristineCode (r:0 w:1)
    /// Proof: Contracts PristineCode (max_values: None, max_size: Some(125988), added: 128463, mode: Ignored)
    fn remove_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `218`
        //  Estimated: `0`
        // Minimum execution time: 41_390 nanoseconds.
        Weight::from_parts(42_220_000, 0)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:2 w:2)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    fn set_code() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `567`
        //  Estimated: `0`
        // Minimum execution time: 47_790 nanoseconds.
        Weight::from_parts(58_291_000, 0)
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(6))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `697 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 375_301 nanoseconds.
        Weight::from_parts(478_558_442, 0)
            // Standard Error: 404_503
            .saturating_add(Weight::from_parts(33_588_102, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_is_contract(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `749 + r * (19218 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 373_011 nanoseconds.
        Weight::from_parts(160_300_699, 0)
            // Standard Error: 1_720_908
            .saturating_add(Weight::from_parts(479_354_490, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `741 + r * (19539 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 379_232 nanoseconds.
        Weight::from_parts(343_138_581, 0)
            // Standard Error: 1_423_456
            .saturating_add(Weight::from_parts(535_980_878, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_own_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `704 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 375_911 nanoseconds.
        Weight::from_parts(467_258_836, 0)
            // Standard Error: 421_581
            .saturating_add(Weight::from_parts(41_940_000, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_caller_is_origin(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 371_141 nanoseconds.
        Weight::from_parts(446_629_107, 0)
            // Standard Error: 302_767
            .saturating_add(Weight::from_parts(21_741_006, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_address(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `698 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_182 nanoseconds.
        Weight::from_parts(455_823_309, 0)
            // Standard Error: 372_497
            .saturating_add(Weight::from_parts(36_686_525, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas_left(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `699 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_301 nanoseconds.
        Weight::from_parts(472_545_348, 0)
            // Standard Error: 365_341
            .saturating_add(Weight::from_parts(33_357_127, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:2 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_balance(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `873 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 373_491 nanoseconds.
        Weight::from_parts(499_112_918, 0)
            // Standard Error: 764_504
            .saturating_add(Weight::from_parts(155_725_717, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_value_transferred(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `708 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 371_591 nanoseconds.
        Weight::from_parts(426_646_447, 0)
            // Standard Error: 343_272
            .saturating_add(Weight::from_parts(37_975_153, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_minimum_balance(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_871 nanoseconds.
        Weight::from_parts(450_665_253, 0)
            // Standard Error: 307_247
            .saturating_add(Weight::from_parts(37_130_906, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_block_number(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_371 nanoseconds.
        Weight::from_parts(457_610_635, 0)
            // Standard Error: 320_428
            .saturating_add(Weight::from_parts(36_685_913, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_now(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_341 nanoseconds.
        Weight::from_parts(466_707_132, 0)
            // Standard Error: 401_912
            .saturating_add(Weight::from_parts(36_811_378, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: TransactionPayment NextFeeMultiplier (r:1 w:0)
    /// Proof: TransactionPayment NextFeeMultiplier (max_values: Some(1), max_size: Some(16), added: 511, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_weight_to_fee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `809 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_241 nanoseconds.
        Weight::from_parts(488_008_780, 0)
            // Standard Error: 627_301
            .saturating_add(Weight::from_parts(120_052_624, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_gas(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `661 + r * (320 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 196_541 nanoseconds.
        Weight::from_parts(226_541_621, 0)
            // Standard Error: 226_852
            .saturating_add(Weight::from_parts(17_352_255, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_input(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `696 + r * (480 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 373_351 nanoseconds.
        Weight::from_parts(461_516_483, 0)
            // Standard Error: 304_494
            .saturating_add(Weight::from_parts(33_051_375, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_input_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1176`
        //  Estimated: `0`
        // Minimum execution time: 406_501 nanoseconds.
        Weight::from_parts(375_214_805, 0)
            // Standard Error: 132_000
            .saturating_add(Weight::from_parts(16_653_138, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_return(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `684 + r * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 369_111 nanoseconds.
        Weight::from_parts(457_587_624, 0)
            // Standard Error: 7_886_413
            .saturating_add(Weight::from_parts(20_295_175, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_return_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694`
        //  Estimated: `0`
        // Minimum execution time: 371_441 nanoseconds.
        Weight::from_parts(463_508_954, 0)
            // Standard Error: 7_361
            .saturating_add(Weight::from_parts(329_068, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:3 w:3)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts DeletionQueue (r:1 w:1)
    /// Proof: Contracts DeletionQueue (max_values: Some(1), max_size: Some(16642), added: 17137, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:3 w:3)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_terminate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `726 + r * (285 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_701 nanoseconds.
        Weight::from_parts(462_025_332, 0)
            // Standard Error: 7_047_477
            .saturating_add(Weight::from_parts(127_317_567, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((5_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((6_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: RandomnessCollectiveFlip RandomMaterial (r:1 w:0)
    /// Proof: RandomnessCollectiveFlip RandomMaterial (max_values: Some(1), max_size: Some(2594), added: 3089, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_random(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `775 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_991 nanoseconds.
        Weight::from_parts(498_662_174, 0)
            // Standard Error: 766_411
            .saturating_add(Weight::from_parts(199_784_446, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_deposit_event(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `694 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 371_391 nanoseconds.
        Weight::from_parts(475_602_737, 0)
            // Standard Error: 1_010_592
            .saturating_add(Weight::from_parts(402_326_784, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:322 w:322)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 4]`.
    /// The range of component `n` is `[0, 16]`.
    fn seal_deposit_event_per_topic_and_kb(t: u32, n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1630 + t * (2608 ±0) + n * (8 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 1_795_546 nanoseconds.
        Weight::from_parts(894_921_942, 0)
            // Standard Error: 3_151_542
            .saturating_add(Weight::from_parts(315_361_325, 0).saturating_mul(t.into()))
            // Standard Error: 865_566
            .saturating_add(Weight::from_parts(109_354_566, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_debug_message(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (800 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 211_860 nanoseconds.
        Weight::from_parts(256_492_987, 0)
            // Standard Error: 258_569
            .saturating_add(Weight::from_parts(28_279_258, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_set_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `720 + r * (23420 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_731 nanoseconds.
        Weight::from_parts(230_042_914, 0)
            // Standard Error: 3_946_397
            .saturating_add(Weight::from_parts(850_235_792, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_new_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `12402 + n * (12006 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 599_732 nanoseconds.
        Weight::from_parts(1_041_267_009, 0)
            // Standard Error: 3_072_249
            .saturating_add(Weight::from_parts(167_808_462, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(52))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(50))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_set_storage_per_old_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14990 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 598_312 nanoseconds.
        Weight::from_parts(986_952_331, 0)
            // Standard Error: 2_862_138
            .saturating_add(Weight::from_parts(122_582_746, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(49))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_clear_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `720 + r * (23100 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 376_741 nanoseconds.
        Weight::from_parts(221_395_468, 0)
            // Standard Error: 3_217_492
            .saturating_add(Weight::from_parts(837_290_505, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_clear_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14670 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 547_492 nanoseconds.
        Weight::from_parts(1_013_256_948, 0)
            // Standard Error: 3_447_891
            .saturating_add(Weight::from_parts(116_759_554, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(48))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_get_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `730 + r * (23740 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 377_442 nanoseconds.
        Weight::from_parts(410_271_744, 0)
            // Standard Error: 2_471_569
            .saturating_add(Weight::from_parts(667_706_422, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_get_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `15321 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 513_942 nanoseconds.
        Weight::from_parts(918_181_187, 0)
            // Standard Error: 3_184_526
            .saturating_add(Weight::from_parts(288_276_116, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_contains_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `723 + r * (23100 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 377_101 nanoseconds.
        Weight::from_parts(408_041_801, 0)
            // Standard Error: 2_513_320
            .saturating_add(Weight::from_parts(638_041_873, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_contains_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `14673 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 505_062 nanoseconds.
        Weight::from_parts(830_145_171, 0)
            // Standard Error: 2_424_530
            .saturating_add(Weight::from_parts(123_975_903, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 10]`.
    fn seal_take_storage(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `731 + r * (23740 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 376_261 nanoseconds.
        Weight::from_parts(341_638_863, 0)
            // Standard Error: 2_683_436
            .saturating_add(Weight::from_parts(808_859_154, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: Skipped Metadata (r:0 w:0)
    /// Proof Skipped: Skipped Metadata (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 8]`.
    fn seal_take_storage_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `15322 + n * (175775 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 553_242 nanoseconds.
        Weight::from_parts(949_041_161, 0)
            // Standard Error: 3_234_437
            .saturating_add(Weight::from_parts(291_728_056, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(51))
            .saturating_add(T::DbWeight::get().reads((7_u64).saturating_mul(n.into())))
            .saturating_add(T::DbWeight::get().writes(48))
            .saturating_add(T::DbWeight::get().writes((7_u64).saturating_mul(n.into())))
    }
    /// Storage: System Account (r:1602 w:1601)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_transfer(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1322 + r * (3601 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 377_072 nanoseconds.
        Weight::from_parts(149_523_628, 0)
            // Standard Error: 2_836_463
            .saturating_add(Weight::from_parts(2_343_177_901, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().reads((80_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(4))
            .saturating_add(T::DbWeight::get().writes((80_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `948 + r * (20495 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 377_371 nanoseconds.
        Weight::from_parts(399_671_000, 0)
            // Standard Error: 34_770_460
            .saturating_add(Weight::from_parts(33_594_746_691, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().reads((160_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((160_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:1537 w:1537)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_delegate_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + r * (71670 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 380_351 nanoseconds.
        Weight::from_parts(441_931_000, 0)
            // Standard Error: 25_033_346
            .saturating_add(Weight::from_parts(33_258_234_459, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((150_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((75_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:82 w:81)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `c` is `[0, 1024]`.
    fn seal_call_per_transfer_clone_kb(t: u32, c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `21128 + t * (15897 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 16_285_648 nanoseconds.
        Weight::from_parts(15_396_101_814, 0)
            // Standard Error: 94_535_254
            .saturating_add(Weight::from_parts(2_070_451_758, 0).saturating_mul(t.into()))
            // Standard Error: 141_750
            .saturating_add(Weight::from_parts(17_431_226, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(167))
            .saturating_add(T::DbWeight::get().reads((81_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(163))
            .saturating_add(T::DbWeight::get().writes((81_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1602 w:1602)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1601 w:1601)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1601 w:1600)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1600 w:1600)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1602 w:1602)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiate(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1512 + r * (25573 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 384_711 nanoseconds.
        Weight::from_parts(450_071_000, 0)
            // Standard Error: 51_397_155
            .saturating_add(Weight::from_parts(44_429_717_226, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(8))
            .saturating_add(T::DbWeight::get().reads((400_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(5))
            .saturating_add(T::DbWeight::get().writes((400_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:82 w:82)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:81 w:81)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:2 w:1)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1 w:1)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:82 w:82)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `t` is `[0, 1]`.
    /// The range of component `i` is `[0, 960]`.
    /// The range of component `s` is `[0, 960]`.
    fn seal_instantiate_per_transfer_input_salt_kb(t: u32, i: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `5505 + t * (68 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 194_548_501 nanoseconds.
        Weight::from_parts(4_060_894_991, 0)
            // Standard Error: 622_337
            .saturating_add(Weight::from_parts(213_591_750, 0).saturating_mul(i.into()))
            // Standard Error: 622_337
            .saturating_add(Weight::from_parts(212_989_598, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(249))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(t.into())))
            .saturating_add(T::DbWeight::get().writes(247))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(t.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_sha2_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `691 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_521 nanoseconds.
        Weight::from_parts(449_893_040, 0)
            // Standard Error: 4_996_487
            .saturating_add(Weight::from_parts(19_002_459, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_sha2_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1493`
        //  Estimated: `0`
        // Minimum execution time: 484_881 nanoseconds.
        Weight::from_parts(71_387_344, 0)
            // Standard Error: 113_883
            .saturating_add(Weight::from_parts(84_883_773, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_keccak_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 372_131 nanoseconds.
        Weight::from_parts(451_030_430, 0)
            // Standard Error: 5_371_296
            .saturating_add(Weight::from_parts(122_296_569, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_keccak_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 454_411 nanoseconds.
        Weight::from_parts(993_751_647, 0)
            // Standard Error: 294_683
            .saturating_add(Weight::from_parts(331_605_187, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_256(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 370_021 nanoseconds.
        Weight::from_parts(440_257_293, 0)
            // Standard Error: 4_816_693
            .saturating_add(Weight::from_parts(77_099_306, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_256_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 426_202 nanoseconds.
        Weight::from_parts(154_821_872, 0)
            // Standard Error: 190_477
            .saturating_add(Weight::from_parts(150_086_142, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_hash_blake2_128(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `693 + r * (642 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 370_912 nanoseconds.
        Weight::from_parts(448_571_518, 0)
            // Standard Error: 6_139_889
            .saturating_add(Weight::from_parts(46_192_881, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `n` is `[0, 1024]`.
    fn seal_hash_blake2_128_per_kb(n: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1495`
        //  Estimated: `0`
        // Minimum execution time: 488_671 nanoseconds.
        Weight::from_parts(354_675_705, 0)
            // Standard Error: 236_238
            .saturating_add(Weight::from_parts(149_911_872, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_recover(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `737 + r * (6083 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_731 nanoseconds.
        Weight::from_parts(477_645_804, 0)
            // Standard Error: 12_318_019
            .saturating_add(Weight::from_parts(5_533_639_795, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 1]`.
    fn seal_ecdsa_to_eth_address(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `706 + r * (3362 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 373_521 nanoseconds.
        Weight::from_parts(454_466_355, 0)
            // Standard Error: 7_035_392
            .saturating_add(Weight::from_parts(1_209_092_744, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1536 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts OwnerInfoOf (r:1536 w:1536)
    /// Proof: Contracts OwnerInfoOf (max_values: None, max_size: Some(88), added: 2563, mode: Ignored)
    /// Storage: System EventTopics (r:1538 w:1538)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_set_code_hash(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + r * (79300 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 375_061 nanoseconds.
        Weight::from_parts(378_341_000, 0)
            // Standard Error: 9_818_609
            .saturating_add(Weight::from_parts(2_879_919_540, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().reads((225_u64).saturating_mul(r.into())))
            .saturating_add(T::DbWeight::get().writes(3))
            .saturating_add(T::DbWeight::get().writes((150_u64).saturating_mul(r.into())))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_reentrance_count(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `689 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 376_911 nanoseconds.
        Weight::from_parts(463_446_143, 0)
            // Standard Error: 289_509
            .saturating_add(Weight::from_parts(20_676_850, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_account_reentrance_count(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1387 + r * (3140 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 382_971 nanoseconds.
        Weight::from_parts(584_876_450, 0)
            // Standard Error: 439_954
            .saturating_add(Weight::from_parts(34_366_738, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(6))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    /// Storage: System Account (r:1 w:0)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: Ignored)
    /// Storage: Contracts ContractInfoOf (r:1 w:1)
    /// Proof: Contracts ContractInfoOf (max_values: None, max_size: Some(258), added: 2733, mode: Ignored)
    /// Storage: Contracts CodeStorage (r:1 w:0)
    /// Proof: Contracts CodeStorage (max_values: None, max_size: Some(126001), added: 128476, mode: Ignored)
    /// Storage: Timestamp Now (r:1 w:0)
    /// Proof: Timestamp Now (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: Contracts Nonce (r:1 w:1)
    /// Proof: Contracts Nonce (max_values: Some(1), max_size: Some(8), added: 503, mode: Ignored)
    /// Storage: System EventTopics (r:2 w:2)
    /// Proof Skipped: System EventTopics (max_values: None, max_size: None, mode: Ignored)
    /// The range of component `r` is `[0, 20]`.
    fn seal_instantiation_nonce(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `692 + r * (240 ±0)`
        //  Estimated: `0`
        // Minimum execution time: 374_531 nanoseconds.
        Weight::from_parts(458_152_912, 0)
            // Standard Error: 305_426
            .saturating_add(Weight::from_parts(16_795_590, 0).saturating_mul(r.into()))
            .saturating_add(T::DbWeight::get().reads(7))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64const(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_680 nanoseconds.
        Weight::from_parts(2_580_043, 0)
            // Standard Error: 5_617
            .saturating_add(Weight::from_parts(595_623, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64load(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_990 nanoseconds.
        Weight::from_parts(11_386_710, 0)
            // Standard Error: 31_531
            .saturating_add(Weight::from_parts(1_717_335, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64store(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_970 nanoseconds.
        Weight::from_parts(8_996_748, 0)
            // Standard Error: 16_297
            .saturating_add(Weight::from_parts(1_592_374, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_select(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_530 nanoseconds.
        Weight::from_parts(2_694_583, 0)
            // Standard Error: 12_481
            .saturating_add(Weight::from_parts(1_566_395, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_if(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_650 nanoseconds.
        Weight::from_parts(3_180_441, 0)
            // Standard Error: 15_341
            .saturating_add(Weight::from_parts(2_217_620, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_640 nanoseconds.
        Weight::from_parts(1_182_725, 0)
            // Standard Error: 7_627
            .saturating_add(Weight::from_parts(1_005_510, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_if(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_470 nanoseconds.
        Weight::from_parts(2_510_975, 0)
            // Standard Error: 10_084
            .saturating_add(Weight::from_parts(1_308_464, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_br_table(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_500 nanoseconds.
        Weight::from_parts(1_362_646, 0)
            // Standard Error: 12_297
            .saturating_add(Weight::from_parts(1_721_594, 0).saturating_mul(r.into()))
    }
    /// The range of component `e` is `[1, 256]`.
    fn instr_br_table_per_entry(e: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_710 nanoseconds.
        Weight::from_parts(6_651_413, 0)
            // Standard Error: 378
            .saturating_add(Weight::from_parts(6_005, 0).saturating_mul(e.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_710 nanoseconds.
        Weight::from_parts(6_173_711, 0)
            // Standard Error: 36_224
            .saturating_add(Weight::from_parts(4_883_881, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_call_indirect(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_850 nanoseconds.
        Weight::from_parts(12_973_120, 0)
            // Standard Error: 48_647
            .saturating_add(Weight::from_parts(5_532_186, 0).saturating_mul(r.into()))
    }
    /// The range of component `p` is `[0, 128]`.
    fn instr_call_indirect_per_param(p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 7_730 nanoseconds.
        Weight::from_parts(12_611_308, 0)
            // Standard Error: 3_590
            .saturating_add(Weight::from_parts(290_374, 0).saturating_mul(p.into()))
    }
    /// The range of component `l` is `[0, 1024]`.
    fn instr_call_per_local(l: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 5_430 nanoseconds.
        Weight::from_parts(7_769_593, 0)
            // Standard Error: 771
            .saturating_add(Weight::from_parts(88_477, 0).saturating_mul(l.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_get(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_790 nanoseconds.
        Weight::from_parts(5_160_298, 0)
            // Standard Error: 6_314
            .saturating_add(Weight::from_parts(741_711, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_831 nanoseconds.
        Weight::from_parts(3_763_733, 0)
            // Standard Error: 9_676
            .saturating_add(Weight::from_parts(1_138_182, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_local_tee(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 3_950 nanoseconds.
        Weight::from_parts(4_489_910, 0)
            // Standard Error: 11_541
            .saturating_add(Weight::from_parts(1_362_339, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_get(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_810 nanoseconds.
        Weight::from_parts(3_745_176, 0)
            // Standard Error: 12_338
            .saturating_add(Weight::from_parts(1_437_795, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_global_set(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(3_413_607, 0)
            // Standard Error: 14_311
            .saturating_add(Weight::from_parts(1_812_119, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_memory_current(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_920 nanoseconds.
        Weight::from_parts(3_171_429, 0)
            // Standard Error: 12_191
            .saturating_add(Weight::from_parts(1_256_399, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 1]`.
    fn instr_memory_grow(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_720 nanoseconds.
        Weight::from_parts(1_969_065, 0)
            // Standard Error: 1_007_166
            .saturating_add(Weight::from_parts(377_371_234, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64clz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(3_355_511, 0)
            // Standard Error: 7_730
            .saturating_add(Weight::from_parts(858_685, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ctz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_540 nanoseconds.
        Weight::from_parts(3_129_105, 0)
            // Standard Error: 7_753
            .saturating_add(Weight::from_parts(861_739, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64popcnt(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_520 nanoseconds.
        Weight::from_parts(3_737_679, 0)
            // Standard Error: 7_624
            .saturating_add(Weight::from_parts(831_018, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eqz(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(2_877_812, 0)
            // Standard Error: 7_097
            .saturating_add(Weight::from_parts(848_356, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendsi32(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_550 nanoseconds.
        Weight::from_parts(2_198_188, 0)
            // Standard Error: 7_192
            .saturating_add(Weight::from_parts(927_106, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64extendui32(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_530 nanoseconds.
        Weight::from_parts(3_524_104, 0)
            // Standard Error: 6_868
            .saturating_add(Weight::from_parts(933_300, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i32wrapi64(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_620 nanoseconds.
        Weight::from_parts(3_721_589, 0)
            // Standard Error: 7_239
            .saturating_add(Weight::from_parts(884_957, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64eq(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_650 nanoseconds.
        Weight::from_parts(3_753_855, 0)
            // Standard Error: 10_085
            .saturating_add(Weight::from_parts(1_138_318, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ne(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_690 nanoseconds.
        Weight::from_parts(3_514_477, 0)
            // Standard Error: 9_860
            .saturating_add(Weight::from_parts(1_129_417, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64lts(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_601 nanoseconds.
        Weight::from_parts(2_668_329, 0)
            // Standard Error: 9_109
            .saturating_add(Weight::from_parts(1_133_595, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ltu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_620 nanoseconds.
        Weight::from_parts(3_086_560, 0)
            // Standard Error: 9_644
            .saturating_add(Weight::from_parts(1_136_912, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gts(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_680 nanoseconds.
        Weight::from_parts(3_016_523, 0)
            // Standard Error: 9_912
            .saturating_add(Weight::from_parts(1_156_442, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64gtu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(3_747_047, 0)
            // Standard Error: 9_269
            .saturating_add(Weight::from_parts(1_111_902, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64les(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_610 nanoseconds.
        Weight::from_parts(3_745_129, 0)
            // Standard Error: 9_367
            .saturating_add(Weight::from_parts(1_114_915, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64leu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_450 nanoseconds.
        Weight::from_parts(3_863_671, 0)
            // Standard Error: 10_278
            .saturating_add(Weight::from_parts(1_129_344, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64ges(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_490 nanoseconds.
        Weight::from_parts(2_115_000, 0)
            // Standard Error: 9_919
            .saturating_add(Weight::from_parts(1_172_745, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64geu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_500 nanoseconds.
        Weight::from_parts(2_978_011, 0)
            // Standard Error: 9_738
            .saturating_add(Weight::from_parts(1_142_209, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64add(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_670 nanoseconds.
        Weight::from_parts(2_819_907, 0)
            // Standard Error: 9_845
            .saturating_add(Weight::from_parts(1_136_779, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64sub(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_710 nanoseconds.
        Weight::from_parts(3_882_976, 0)
            // Standard Error: 9_852
            .saturating_add(Weight::from_parts(1_123_317, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64mul(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_540 nanoseconds.
        Weight::from_parts(3_242_475, 0)
            // Standard Error: 9_582
            .saturating_add(Weight::from_parts(1_125_660, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divs(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(3_521_333, 0)
            // Standard Error: 9_033
            .saturating_add(Weight::from_parts(1_289_409, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64divu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(3_353_761, 0)
            // Standard Error: 10_405
            .saturating_add(Weight::from_parts(1_135_591, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rems(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_630 nanoseconds.
        Weight::from_parts(3_967_717, 0)
            // Standard Error: 9_817
            .saturating_add(Weight::from_parts(1_245_087, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64remu(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_530 nanoseconds.
        Weight::from_parts(3_641_209, 0)
            // Standard Error: 9_268
            .saturating_add(Weight::from_parts(1_190_994, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64and(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_690 nanoseconds.
        Weight::from_parts(3_248_656, 0)
            // Standard Error: 8_862
            .saturating_add(Weight::from_parts(1_132_534, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64or(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_610 nanoseconds.
        Weight::from_parts(2_963_671, 0)
            // Standard Error: 9_662
            .saturating_add(Weight::from_parts(1_122_743, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64xor(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(2_527_883, 0)
            // Standard Error: 9_556
            .saturating_add(Weight::from_parts(1_148_291, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shl(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_611 nanoseconds.
        Weight::from_parts(4_494_670, 0)
            // Standard Error: 10_063
            .saturating_add(Weight::from_parts(1_104_601, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shrs(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_680 nanoseconds.
        Weight::from_parts(3_218_937, 0)
            // Standard Error: 9_383
            .saturating_add(Weight::from_parts(1_129_981, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64shru(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_530 nanoseconds.
        Weight::from_parts(2_949_558, 0)
            // Standard Error: 10_575
            .saturating_add(Weight::from_parts(1_205_527, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotl(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_510 nanoseconds.
        Weight::from_parts(4_608_725, 0)
            // Standard Error: 12_089
            .saturating_add(Weight::from_parts(1_159_508, 0).saturating_mul(r.into()))
    }
    /// The range of component `r` is `[0, 50]`.
    fn instr_i64rotr(r: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0`
        //  Estimated: `0`
        // Minimum execution time: 1_610 nanoseconds.
        Weight::from_parts(3_669_552, 0)
            // Standard Error: 10_031
            .saturating_add(Weight::from_parts(1_149_825, 0).saturating_mul(r.into()))
    }
}

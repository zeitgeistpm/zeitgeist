// Copyright 2022-2024 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_assets
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2024-04-02`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zeitgeist-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_assets
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_assets (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_assets::weights::WeightInfo for WeightInfo<T> {
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `285`
        //  Estimated: `5304`
        // Minimum execution time: 38_030 nanoseconds.
        Weight::from_parts(39_010_000, 5304)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn force_create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `109`
        //  Estimated: `2697`
        // Minimum execution time: 20_930 nanoseconds.
        Weight::from_parts(24_940_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: AssetRouter DestroyAssets (r:1 w:1)
    /// Proof: AssetRouter DestroyAssets (max_values: Some(1), max_size: Some(40962), added: 41457, mode: MaxEncodedLen)
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: AssetRouter IndestructibleAssets (r:1 w:0)
    /// Proof: AssetRouter IndestructibleAssets (max_values: Some(1), max_size: Some(38914), added: 39409, mode: MaxEncodedLen)
    fn start_destroy() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `452`
        //  Estimated: `83563`
        // Minimum execution time: 31_480 nanoseconds.
        Weight::from_parts(38_210_000, 83563)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:51 w:50)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:50 w:50)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    /// The range of component `c` is `[0, 50]`.
    fn destroy_accounts(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `413 + c * (241 ±0)`
        //  Estimated: `5286 + c * (5196 ±0)`
        // Minimum execution time: 30_040 nanoseconds.
        Weight::from_parts(43_513_498, 5286)
            // Standard Error: 166_642
            .saturating_add(Weight::from_parts(22_767_082, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(c.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(c.into())))
            .saturating_add(Weight::from_parts(0, 5196).saturating_mul(c.into()))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:51 w:50)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    /// The range of component `a` is `[0, 50]`.
    fn destroy_approvals(a: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `499 + a * (86 ±0)`
        //  Estimated: `5332 + a * (2635 ±0)`
        // Minimum execution time: 28_480 nanoseconds.
        Weight::from_parts(52_169_904, 5332)
            // Standard Error: 142_566
            .saturating_add(Weight::from_parts(21_599_409, 0).saturating_mul(a.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
            .saturating_add(Weight::from_parts(0, 2635).saturating_mul(a.into()))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:0)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn finish_destroy() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5324`
        // Minimum execution time: 23_880 nanoseconds.
        Weight::from_parts(24_760_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5286`
        // Minimum execution time: 39_510 nanoseconds.
        Weight::from_parts(40_330_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn burn() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `481`
        //  Estimated: `5286`
        // Minimum execution time: 48_130 nanoseconds.
        Weight::from_parts(58_590_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `520`
        //  Estimated: `10482`
        // Minimum execution time: 67_810 nanoseconds.
        Weight::from_parts(68_830_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer_keep_alive() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `520`
        //  Estimated: `10482`
        // Minimum execution time: 59_550 nanoseconds.
        Weight::from_parts(60_701_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn force_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `520`
        //  Estimated: `10482`
        // Minimum execution time: 67_790 nanoseconds.
        Weight::from_parts(82_380_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn freeze() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `481`
        //  Estimated: `5286`
        // Minimum execution time: 26_670 nanoseconds.
        Weight::from_parts(31_120_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn thaw() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `481`
        //  Estimated: `5286`
        // Minimum execution time: 26_540 nanoseconds.
        Weight::from_parts(27_220_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn freeze_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410`
        //  Estimated: `2697`
        // Minimum execution time: 20_420 nanoseconds.
        Weight::from_parts(21_350_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn thaw_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410`
        //  Estimated: `2697`
        // Minimum execution time: 20_591 nanoseconds.
        Weight::from_parts(25_120_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:0)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn transfer_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5324`
        // Minimum execution time: 24_900 nanoseconds.
        Weight::from_parts(30_390_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn set_team() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `2697`
        // Minimum execution time: 22_670 nanoseconds.
        Weight::from_parts(23_290_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    /// The range of component `n` is `[0, 50]`.
    /// The range of component `s` is `[0, 50]`.
    fn set_metadata(n: u32, _s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5324`
        // Minimum execution time: 32_660 nanoseconds.
        Weight::from_parts(40_239_865, 5324)
            // Standard Error: 8_166
            .saturating_add(Weight::from_parts(6_886, 0).saturating_mul(n.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `569`
        //  Estimated: `5324`
        // Minimum execution time: 37_450 nanoseconds.
        Weight::from_parts(39_330_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    /// The range of component `n` is `[0, 50]`.
    /// The range of component `s` is `[0, 50]`.
    fn force_set_metadata(n: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `183`
        //  Estimated: `5324`
        // Minimum execution time: 23_250 nanoseconds.
        Weight::from_parts(25_237_772, 5324)
            // Standard Error: 5_317
            .saturating_add(Weight::from_parts(5_712, 0).saturating_mul(n.into()))
            // Standard Error: 5_317
            .saturating_add(Weight::from_parts(16_298, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn force_clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `569`
        //  Estimated: `5324`
        // Minimum execution time: 36_550 nanoseconds.
        Weight::from_parts(37_430_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn force_asset_status() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `2697`
        // Minimum execution time: 21_430 nanoseconds.
        Weight::from_parts(21_890_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn approve_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410`
        //  Estimated: `5332`
        // Minimum execution time: 36_791 nanoseconds.
        Weight::from_parts(45_250_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer_approved() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `687`
        //  Estimated: `13117`
        // Minimum execution time: 88_930 nanoseconds.
        Weight::from_parts(108_130_000, 13117)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `577`
        //  Estimated: `5332`
        // Minimum execution time: 44_150 nanoseconds.
        Weight::from_parts(45_490_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn force_cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `577`
        //  Estimated: `5332`
        // Minimum execution time: 45_170 nanoseconds.
        Weight::from_parts(55_471_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
}

// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_assets
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2024-02-15`, STEPS: `2`, REPEAT: `0`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zafoi`, CPU: `AMD Ryzen 9 5900X 12-Core Processor`
//! EXECUTION: `Some(Native)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/release/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=2
// --repeat=0
// --pallet=pallet_assets
// --extrinsic=*
// --execution=native
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_assets (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_assets::weights::WeightInfo for WeightInfo<T> {
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `285`
        //  Estimated: `5304`
        // Minimum execution time: 15_220 nanoseconds.
        Weight::from_parts(15_220_000, 5304)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn force_create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `109`
        //  Estimated: `2697`
        // Minimum execution time: 9_330 nanoseconds.
        Weight::from_parts(9_330_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: AssetRouter DestroyAssets (r:1 w:1)
    /// Proof: AssetRouter DestroyAssets (max_values: Some(1), max_size: Some(40962), added: 41457, mode: MaxEncodedLen)
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: AssetRouter IndestructibleAssets (r:1 w:0)
    /// Proof: AssetRouter IndestructibleAssets (max_values: Some(1), max_size: Some(38914), added: 39409, mode: MaxEncodedLen)
    fn start_destroy() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `452`
        //  Estimated: `83563`
        // Minimum execution time: 13_051 nanoseconds.
        Weight::from_parts(13_051_000, 83563)
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:51 w:50)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:50 w:50)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    /// The range of component `c` is `[0, 50]`.
    fn destroy_accounts(_c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376 + c * (241 ±0)`
        //  Estimated: `265086`
        // Minimum execution time: 12_911 nanoseconds.
        Weight::from_parts(466_572_000, 265086)
            .saturating_add(T::DbWeight::get().reads(102))
            .saturating_add(T::DbWeight::get().writes(101))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:51 w:50)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    /// The range of component `a` is `[0, 50]`.
    fn destroy_approvals(_a: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410 + a * (88 ±0)`
        //  Estimated: `137082`
        // Minimum execution time: 12_480 nanoseconds.
        Weight::from_parts(403_251_000, 137082)
            .saturating_add(T::DbWeight::get().reads(52))
            .saturating_add(T::DbWeight::get().writes(51))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:0)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn finish_destroy() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5324`
        // Minimum execution time: 9_881 nanoseconds.
        Weight::from_parts(9_881_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5286`
        // Minimum execution time: 15_010 nanoseconds.
        Weight::from_parts(15_010_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn burn() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `481`
        //  Estimated: `5286`
        // Minimum execution time: 17_511 nanoseconds.
        Weight::from_parts(17_511_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `520`
        //  Estimated: `10482`
        // Minimum execution time: 23_321 nanoseconds.
        Weight::from_parts(23_321_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer_keep_alive() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `520`
        //  Estimated: `10482`
        // Minimum execution time: 20_681 nanoseconds.
        Weight::from_parts(20_681_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn force_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `520`
        //  Estimated: `10482`
        // Minimum execution time: 23_021 nanoseconds.
        Weight::from_parts(23_021_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn freeze() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `481`
        //  Estimated: `5286`
        // Minimum execution time: 10_620 nanoseconds.
        Weight::from_parts(10_620_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:1 w:1)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn thaw() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `481`
        //  Estimated: `5286`
        // Minimum execution time: 10_370 nanoseconds.
        Weight::from_parts(10_370_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn freeze_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410`
        //  Estimated: `2697`
        // Minimum execution time: 8_710 nanoseconds.
        Weight::from_parts(8_710_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn thaw_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410`
        //  Estimated: `2697`
        // Minimum execution time: 8_400 nanoseconds.
        Weight::from_parts(8_400_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:0)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn transfer_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5324`
        // Minimum execution time: 10_600 nanoseconds.
        Weight::from_parts(10_600_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn set_team() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `2697`
        // Minimum execution time: 9_221 nanoseconds.
        Weight::from_parts(9_221_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    /// The range of component `n` is `[0, 50]`.
    /// The range of component `s` is `[0, 50]`.
    fn set_metadata(_n: u32, _s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `5324`
        // Minimum execution time: 14_040 nanoseconds.
        Weight::from_parts(16_751_500, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `569`
        //  Estimated: `5324`
        // Minimum execution time: 14_580 nanoseconds.
        Weight::from_parts(14_580_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    /// The range of component `n` is `[0, 50]`.
    /// The range of component `s` is `[0, 50]`.
    fn force_set_metadata(_n: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `183`
        //  Estimated: `5324`
        // Minimum execution time: 9_340 nanoseconds.
        Weight::from_parts(9_745_000, 5324)
            // Standard Error: 6_754
            .saturating_add(Weight::from_parts(9_100, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:0)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Metadata (r:1 w:1)
    /// Proof: CustomAssets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn force_clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `569`
        //  Estimated: `5324`
        // Minimum execution time: 15_270 nanoseconds.
        Weight::from_parts(15_270_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn force_asset_status() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `376`
        //  Estimated: `2697`
        // Minimum execution time: 9_671 nanoseconds.
        Weight::from_parts(9_671_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn approve_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `410`
        //  Estimated: `5332`
        // Minimum execution time: 16_250 nanoseconds.
        Weight::from_parts(16_250_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    /// Storage: CustomAssets Account (r:2 w:2)
    /// Proof: CustomAssets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer_approved() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `687`
        //  Estimated: `13117`
        // Minimum execution time: 31_161 nanoseconds.
        Weight::from_parts(31_161_000, 13117)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `577`
        //  Estimated: `5332`
        // Minimum execution time: 16_640 nanoseconds.
        Weight::from_parts(16_640_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: CustomAssets Asset (r:1 w:1)
    /// Proof: CustomAssets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: CustomAssets Approvals (r:1 w:1)
    /// Proof: CustomAssets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn force_cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `577`
        //  Estimated: `5332`
        // Minimum execution time: 16_961 nanoseconds.
        Weight::from_parts(16_961_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
}

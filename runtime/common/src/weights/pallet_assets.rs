// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_assets
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2023-11-01`, STEPS: `2`, REPEAT: `2`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `sea212-PC`, CPU: `AMD Ryzen 9 5900X 12-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/debug/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=2
// --repeat=2
// --pallet=pallet_assets
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_assets (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_assets::weights::WeightInfo for WeightInfo<T> {
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `218`
        //  Estimated: `5304`
        // Minimum execution time: 294_576 nanoseconds.
        Weight::from_parts(316_096_000, 5304)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn force_create() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `42`
        //  Estimated: `2697`
        // Minimum execution time: 163_914 nanoseconds.
        Weight::from_parts(187_984_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn start_destroy() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `358`
        //  Estimated: `2697`
        // Minimum execution time: 160_353 nanoseconds.
        Weight::from_parts(172_194_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:51 w:50)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:50 w:50)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    /// The range of component `c` is `[0, 50]`.
    fn destroy_accounts(c: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324 + c * (242 ±0)`
        //  Estimated: `135636 + c * (2589 ±0)`
        // Minimum execution time: 224_474 nanoseconds.
        Weight::from_parts(225_024_000, 135636)
            // Standard Error: 432_869
            .saturating_add(Weight::from_parts(176_285_210, 0).saturating_mul(c.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((2_u64).saturating_mul(c.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((2_u64).saturating_mul(c.into())))
            .saturating_add(Weight::from_parts(0, 2589).saturating_mul(c.into()))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Approvals (r:51 w:50)
    /// Proof: Assets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    /// The range of component `a` is `[0, 50]`.
    fn destroy_approvals(a: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `358 + a * (88 ±0)`
        //  Estimated: `5332 + a * (2635 ±0)`
        // Minimum execution time: 201_885 nanoseconds.
        Weight::from_parts(210_474_500, 5332)
            // Standard Error: 807_700
            .saturating_add(Weight::from_parts(184_051_830, 0).saturating_mul(a.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(a.into())))
            .saturating_add(T::DbWeight::get().writes(1))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(a.into())))
            .saturating_add(Weight::from_parts(0, 2635).saturating_mul(a.into()))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Metadata (r:1 w:0)
    /// Proof: Assets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn finish_destroy() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324`
        //  Estimated: `5324`
        // Minimum execution time: 184_174 nanoseconds.
        Weight::from_parts(207_774_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:1 w:1)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn mint() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324`
        //  Estimated: `5286`
        // Minimum execution time: 303_436 nanoseconds.
        Weight::from_parts(316_737_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:1 w:1)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn burn() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `444`
        //  Estimated: `5286`
        // Minimum execution time: 388_118 nanoseconds.
        Weight::from_parts(402_668_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:2 w:2)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `483`
        //  Estimated: `10482`
        // Minimum execution time: 566_502 nanoseconds.
        Weight::from_parts(587_882_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:2 w:2)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer_keep_alive() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `483`
        //  Estimated: `10482`
        // Minimum execution time: 500_120 nanoseconds.
        Weight::from_parts(517_041_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:2 w:2)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn force_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `483`
        //  Estimated: `10482`
        // Minimum execution time: 565_382 nanoseconds.
        Weight::from_parts(581_262_000, 10482)
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    /// Storage: Assets Asset (r:1 w:0)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:1 w:1)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn freeze() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `444`
        //  Estimated: `5286`
        // Minimum execution time: 212_584 nanoseconds.
        Weight::from_parts(231_845_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:0)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:1 w:1)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    fn thaw() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `444`
        //  Estimated: `5286`
        // Minimum execution time: 213_705 nanoseconds.
        Weight::from_parts(225_135_000, 5286)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn freeze_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `358`
        //  Estimated: `2697`
        // Minimum execution time: 157_223 nanoseconds.
        Weight::from_parts(169_343_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn thaw_asset() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `358`
        //  Estimated: `2697`
        // Minimum execution time: 158_273 nanoseconds.
        Weight::from_parts(170_884_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Metadata (r:1 w:0)
    /// Proof: Assets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn transfer_ownership() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324`
        //  Estimated: `5324`
        // Minimum execution time: 189_044 nanoseconds.
        Weight::from_parts(201_334_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn set_team() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324`
        //  Estimated: `2697`
        // Minimum execution time: 166_284 nanoseconds.
        Weight::from_parts(180_313_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:0)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Metadata (r:1 w:1)
    /// Proof: Assets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    /// The range of component `n` is `[0, 50]`.
    /// The range of component `s` is `[0, 50]`.
    fn set_metadata(n: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324`
        //  Estimated: `5324`
        // Minimum execution time: 282_556 nanoseconds.
        Weight::from_parts(287_195_500, 5324)
            // Standard Error: 211_675
            .saturating_add(Weight::from_parts(55_910, 0).saturating_mul(n.into()))
            // Standard Error: 211_675
            .saturating_add(Weight::from_parts(115_310, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:0)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Metadata (r:1 w:1)
    /// Proof: Assets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `532`
        //  Estimated: `5324`
        // Minimum execution time: 295_517 nanoseconds.
        Weight::from_parts(310_096_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:0)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Metadata (r:1 w:1)
    /// Proof: Assets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    /// The range of component `n` is `[0, 50]`.
    /// The range of component `s` is `[0, 50]`.
    fn force_set_metadata(n: u32, s: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `131`
        //  Estimated: `5324`
        // Minimum execution time: 186_034 nanoseconds.
        Weight::from_parts(189_209_000, 5324)
            // Standard Error: 183_142
            .saturating_add(Weight::from_parts(54_710, 0).saturating_mul(n.into()))
            // Standard Error: 183_142
            .saturating_add(Weight::from_parts(76_500, 0).saturating_mul(s.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:0)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Metadata (r:1 w:1)
    /// Proof: Assets Metadata (max_values: None, max_size: Some(152), added: 2627, mode: MaxEncodedLen)
    fn force_clear_metadata() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `532`
        //  Estimated: `5324`
        // Minimum execution time: 291_577 nanoseconds.
        Weight::from_parts(308_826_000, 5324)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    fn force_asset_status() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `324`
        //  Estimated: `2697`
        // Minimum execution time: 163_124 nanoseconds.
        Weight::from_parts(177_773_000, 2697)
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Approvals (r:1 w:1)
    /// Proof: Assets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn approve_transfer() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `358`
        //  Estimated: `5332`
        // Minimum execution time: 326_807 nanoseconds.
        Weight::from_parts(340_847_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Approvals (r:1 w:1)
    /// Proof: Assets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    /// Storage: Assets Account (r:2 w:2)
    /// Proof: Assets Account (max_values: None, max_size: Some(114), added: 2589, mode: MaxEncodedLen)
    /// Storage: System Account (r:1 w:1)
    /// Proof: System Account (max_values: None, max_size: Some(132), added: 2607, mode: MaxEncodedLen)
    fn transfer_approved() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `665`
        //  Estimated: `13117`
        // Minimum execution time: 739_565 nanoseconds.
        Weight::from_parts(755_396_000, 13117)
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(5))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Approvals (r:1 w:1)
    /// Proof: Assets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `540`
        //  Estimated: `5332`
        // Minimum execution time: 356_107 nanoseconds.
        Weight::from_parts(379_428_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
    /// Storage: Assets Asset (r:1 w:1)
    /// Proof: Assets Asset (max_values: None, max_size: Some(222), added: 2697, mode: MaxEncodedLen)
    /// Storage: Assets Approvals (r:1 w:1)
    /// Proof: Assets Approvals (max_values: None, max_size: Some(160), added: 2635, mode: MaxEncodedLen)
    fn force_cancel_approval() -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `540`
        //  Estimated: `5332`
        // Minimum execution time: 360_088 nanoseconds.
        Weight::from_parts(375_088_000, 5332)
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(2))
    }
}

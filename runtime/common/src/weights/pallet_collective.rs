// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-08-05, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_collective
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_collective (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::weights::WeightInfo for WeightInfo<T> {
    // Storage: AdvisoryCommittee Members (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:0)
    // Storage: AdvisoryCommittee Prime (r:0 w:1)
    // Storage: AdvisoryCommittee Voting (r:255 w:255)
    fn set_members(m: u32, _n: u32, p: u32) -> Weight {
        Weight::from_ref_time(34_440_000)
            // Standard Error: 316_829
            .saturating_add(Weight::from_ref_time(23_163_910).saturating_mul(m.into()))
            // Standard Error: 124_394
            .saturating_add(Weight::from_ref_time(14_040_837).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(p.into())))
            .saturating_add(T::DbWeight::get().writes(2))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(p.into())))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    fn execute(_b: u32, _m: u32) -> Weight {
        Weight::from_ref_time(52_383_265).saturating_add(T::DbWeight::get().reads(1))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:0)
    fn propose_execute(b: u32, m: u32) -> Weight {
        Weight::from_ref_time(51_062_771)
            // Standard Error: 573
            .saturating_add(Weight::from_ref_time(1_921).saturating_mul(b.into()))
            // Standard Error: 5_915
            .saturating_add(Weight::from_ref_time(36_487).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(2))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee ProposalCount (r:1 w:1)
    // Storage: AdvisoryCommittee Voting (r:0 w:1)
    fn propose_proposed(b: u32, m: u32, p: u32) -> Weight {
        Weight::from_ref_time(36_154_514)
            // Standard Error: 1_745
            .saturating_add(Weight::from_ref_time(20_413).saturating_mul(b.into()))
            // Standard Error: 18_217
            .saturating_add(Weight::from_ref_time(126_504).saturating_mul(m.into()))
            // Standard Error: 7_013
            .saturating_add(Weight::from_ref_time(329_220).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    fn vote(m: u32) -> Weight {
        Weight::from_ref_time(93_521_939)
            // Standard Error: 19_552
            .saturating_add(Weight::from_ref_time(125_381).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    fn close_early_disapproved(_m: u32, p: u32) -> Weight {
        Weight::from_ref_time(93_839_100)
            // Standard Error: 7_819
            .saturating_add(Weight::from_ref_time(265_745).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    fn close_early_approved(b: u32, m: u32, p: u32) -> Weight {
        Weight::from_ref_time(73_194_294)
            // Standard Error: 2_028
            .saturating_add(Weight::from_ref_time(14_757).saturating_mul(b.into()))
            // Standard Error: 21_436
            .saturating_add(Weight::from_ref_time(23_359).saturating_mul(m.into()))
            // Standard Error: 8_147
            .saturating_add(Weight::from_ref_time(347_959).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Prime (r:1 w:0)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    fn close_disapproved(m: u32, p: u32) -> Weight {
        Weight::from_ref_time(57_401_274)
            // Standard Error: 18_844
            .saturating_add(Weight::from_ref_time(130_583).saturating_mul(m.into()))
            // Standard Error: 7_162
            .saturating_add(Weight::from_ref_time(307_554).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Prime (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    fn close_approved(b: u32, m: u32, p: u32) -> Weight {
        Weight::from_ref_time(60_881_034)
            // Standard Error: 1_983
            .saturating_add(Weight::from_ref_time(12_789).saturating_mul(b.into()))
            // Standard Error: 20_967
            .saturating_add(Weight::from_ref_time(128_737).saturating_mul(m.into()))
            // Standard Error: 7_969
            .saturating_add(Weight::from_ref_time(380_829).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee Voting (r:0 w:1)
    // Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    fn disapprove_proposal(p: u32) -> Weight {
        Weight::from_ref_time(48_045_535)
            // Standard Error: 5_998
            .saturating_add(Weight::from_ref_time(254_464).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(3))
    }
}

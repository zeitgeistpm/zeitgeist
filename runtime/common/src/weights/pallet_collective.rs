// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-07-20, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_collective
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_collective (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::weights::WeightInfo for WeightInfo<T> {
    // Storage: AdvisoryCommittee Members (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:0)
    // Storage: AdvisoryCommittee Prime (r:0 w:1)
    // Storage: AdvisoryCommittee Voting (r:255 w:255)
    fn set_members(m: u32, _n: u32, p: u32) -> Weight {
        Weight::from_ref_time(35_920_000)
            // Standard Error: 317_531
            .saturating_add(Weight::from_ref_time(22_764_978).saturating_mul(m.into()))
            // Standard Error: 124_670
            .saturating_add(Weight::from_ref_time(14_033_600).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(p.into())))
            .saturating_add(T::DbWeight::get().writes(2))
            .saturating_add(T::DbWeight::get().writes((1_u64).saturating_mul(p.into())))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    fn execute(b: u32, m: u32) -> Weight {
        Weight::from_ref_time(37_785_879)
            // Standard Error: 1_193
            .saturating_add(Weight::from_ref_time(10_958).saturating_mul(b.into()))
            // Standard Error: 12_310
            .saturating_add(Weight::from_ref_time(69_468).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(1))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:0)
    fn propose_execute(b: u32, m: u32) -> Weight {
        Weight::from_ref_time(48_724_265)
            // Standard Error: 526
            .saturating_add(Weight::from_ref_time(4_396).saturating_mul(b.into()))
            // Standard Error: 5_428
            .saturating_add(Weight::from_ref_time(31_535).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(2))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee ProposalCount (r:1 w:1)
    // Storage: AdvisoryCommittee Voting (r:0 w:1)
    fn propose_proposed(b: u32, m: u32, p: u32) -> Weight {
        Weight::from_ref_time(48_302_669)
            // Standard Error: 1_881
            .saturating_add(Weight::from_ref_time(17_297).saturating_mul(b.into()))
            // Standard Error: 19_654
            .saturating_add(Weight::from_ref_time(103_864).saturating_mul(m.into()))
            // Standard Error: 7_566
            .saturating_add(Weight::from_ref_time(328_821).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(4))
    }
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    fn vote(m: u32) -> Weight {
        Weight::from_ref_time(100_860_204)
            // Standard Error: 19_843
            .saturating_add(Weight::from_ref_time(147_566).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(2))
            .saturating_add(T::DbWeight::get().writes(1))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    fn close_early_disapproved(_m: u32, p: u32) -> Weight {
        Weight::from_ref_time(81_393_629)
            // Standard Error: 6_899
            .saturating_add(Weight::from_ref_time(292_168).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(3))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    fn close_early_approved(b: u32, m: u32, p: u32) -> Weight {
        Weight::from_ref_time(61_798_175)
            // Standard Error: 2_013
            .saturating_add(Weight::from_ref_time(8_865).saturating_mul(b.into()))
            // Standard Error: 21_302
            .saturating_add(Weight::from_ref_time(164_346).saturating_mul(m.into()))
            // Standard Error: 8_096
            .saturating_add(Weight::from_ref_time(384_823).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Prime (r:1 w:0)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    fn close_disapproved(_m: u32, p: u32) -> Weight {
        Weight::from_ref_time(85_607_614)
            // Standard Error: 7_391
            .saturating_add(Weight::from_ref_time(288_303).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Voting (r:1 w:1)
    // Storage: AdvisoryCommittee Members (r:1 w:0)
    // Storage: AdvisoryCommittee Prime (r:1 w:0)
    // Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    fn close_approved(b: u32, m: u32, p: u32) -> Weight {
        Weight::from_ref_time(75_320_016)
            // Standard Error: 2_140
            .saturating_add(Weight::from_ref_time(14_677).saturating_mul(b.into()))
            // Standard Error: 22_644
            .saturating_add(Weight::from_ref_time(31_875).saturating_mul(m.into()))
            // Standard Error: 8_606
            .saturating_add(Weight::from_ref_time(372_647).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(5))
            .saturating_add(T::DbWeight::get().writes(3))
    }
    // Storage: AdvisoryCommittee Proposals (r:1 w:1)
    // Storage: AdvisoryCommittee Voting (r:0 w:1)
    // Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    fn disapprove_proposal(p: u32) -> Weight {
        Weight::from_ref_time(50_921_770)
            // Standard Error: 6_439
            .saturating_add(Weight::from_ref_time(270_592).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(1))
            .saturating_add(T::DbWeight::get().writes(3))
    }
}

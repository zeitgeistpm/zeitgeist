// Copyright 2022-2023 Forecasting Technologies LTD.
// Copyright 2021-2022 Zeitgeist PM LLC.
//
// This file is part of Zeitgeist.
//
// Zeitgeist is free software: you can redistribute it and/or modify it
// under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at
// your option) any later version.
//
// Zeitgeist is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
// General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Zeitgeist. If not, see <https://www.gnu.org/licenses/>.

//! Autogenerated weights for pallet_collective
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: `2023-09-11`, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `zeitgeist-benchmark`, CPU: `AMD EPYC 7601 32-Core Processor`
//! EXECUTION: `Some(Wasm)`, WASM-EXECUTION: `Compiled`, CHAIN: `Some("dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/production/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_collective
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --header=./HEADER_GPL3
// --output=./runtime/common/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_collective (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_collective::weights::WeightInfo for WeightInfo<T> {
    /// Storage: AdvisoryCommittee Members (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Proposals (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Voting (r:255 w:255)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Prime (r:0 w:1)
    /// Proof Skipped: AdvisoryCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
    fn set_members(m: u32, _n: u32, p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `0 + m * (8195 ±0) + p * (3227 ±0)`
        //  Estimated: `33167 + m * (19751 ±60) + p * (10255 ±23)`
        // Minimum execution time: 27_360 nanoseconds.
        Weight::from_parts(31_790_000, 33167)
            // Standard Error: 345_543
            .saturating_add(Weight::from_ref_time(26_786_377).saturating_mul(m.into()))
            // Standard Error: 135_668
            .saturating_add(Weight::from_ref_time(16_456_141).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().reads((1_u64).saturating_mul(p.into())))
            .saturating_add(T::DbWeight::get().writes(2_u64))
            .saturating_add(Weight::from_proof_size(19751).saturating_mul(m.into()))
            .saturating_add(Weight::from_proof_size(10255).saturating_mul(p.into()))
    }
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    fn execute(b: u32, m: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `100 + m * (32 ±0)`
        //  Estimated: `596 + m * (32 ±0)`
        // Minimum execution time: 26_230 nanoseconds.
        Weight::from_parts(27_588_781, 596)
            // Standard Error: 639
            .saturating_add(Weight::from_ref_time(4_498).saturating_mul(b.into()))
            // Standard Error: 6_589
            .saturating_add(Weight::from_ref_time(73_787).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(Weight::from_proof_size(32).saturating_mul(m.into()))
    }
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    fn propose_execute(_b: u32, m: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `100 + m * (32 ±0)`
        //  Estimated: `3172 + m * (64 ±0)`
        // Minimum execution time: 31_930 nanoseconds.
        Weight::from_parts(37_847_845, 3172)
            // Standard Error: 3_879
            .saturating_add(Weight::from_ref_time(59_390).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(Weight::from_proof_size(64).saturating_mul(m.into()))
    }
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Proposals (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalCount (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalCount (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Voting (r:0 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    fn propose_proposed(b: u32, m: u32, p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `565 + m * (32 ±0) + p * (33 ±0)`
        //  Estimated: `6570 + m * (160 ±0) + p * (170 ±0)`
        // Minimum execution time: 43_381 nanoseconds.
        Weight::from_parts(46_692_278, 6570)
            // Standard Error: 827
            .saturating_add(Weight::from_ref_time(13_103).saturating_mul(b.into()))
            // Standard Error: 8_636
            .saturating_add(Weight::from_ref_time(27_432).saturating_mul(m.into()))
            // Standard Error: 3_324
            .saturating_add(Weight::from_ref_time(231_252).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(4_u64))
            .saturating_add(Weight::from_proof_size(160).saturating_mul(m.into()))
            .saturating_add(Weight::from_proof_size(170).saturating_mul(p.into()))
    }
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Voting (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    fn vote(m: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `1240 + m * (64 ±0)`
        //  Estimated: `5448 + m * (128 ±0)`
        // Minimum execution time: 37_420 nanoseconds.
        Weight::from_parts(53_806_615, 5448)
            // Standard Error: 9_141
            .saturating_add(Weight::from_ref_time(161_613).saturating_mul(m.into()))
            .saturating_add(T::DbWeight::get().reads(2_u64))
            .saturating_add(T::DbWeight::get().writes(1_u64))
            .saturating_add(Weight::from_proof_size(128).saturating_mul(m.into()))
    }
    /// Storage: AdvisoryCommittee Voting (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Proposals (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    fn close_early_disapproved(m: u32, p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `683 + m * (64 ±0) + p * (33 ±0)`
        //  Estimated: `6017 + m * (260 ±0) + p * (136 ±0)`
        // Minimum execution time: 44_960 nanoseconds.
        Weight::from_parts(48_176_221, 6017)
            // Standard Error: 7_630
            .saturating_add(Weight::from_ref_time(90_627).saturating_mul(m.into()))
            // Standard Error: 2_899
            .saturating_add(Weight::from_ref_time(236_469).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(3_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
            .saturating_add(Weight::from_proof_size(260).saturating_mul(m.into()))
            .saturating_add(Weight::from_proof_size(136).saturating_mul(p.into()))
    }
    /// Storage: AdvisoryCommittee Voting (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Proposals (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    fn close_early_approved(b: u32, m: u32, p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `926 + b * (1 ±0) + m * (64 ±0) + p * (36 ±0)`
        //  Estimated: `9916 + b * (4 ±0) + m * (248 ±0) + p * (144 ±0)`
        // Minimum execution time: 65_530 nanoseconds.
        Weight::from_parts(60_433_852, 9916)
            // Standard Error: 784
            .saturating_add(Weight::from_ref_time(14_398).saturating_mul(b.into()))
            // Standard Error: 8_292
            .saturating_add(Weight::from_ref_time(54_397).saturating_mul(m.into()))
            // Standard Error: 3_151
            .saturating_add(Weight::from_ref_time(308_958).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
            .saturating_add(Weight::from_proof_size(4).saturating_mul(b.into()))
            .saturating_add(Weight::from_proof_size(248).saturating_mul(m.into()))
            .saturating_add(Weight::from_proof_size(144).saturating_mul(p.into()))
    }
    /// Storage: AdvisoryCommittee Voting (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Prime (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Proposals (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    fn close_disapproved(m: u32, p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `703 + m * (64 ±0) + p * (33 ±0)`
        //  Estimated: `7250 + m * (325 ±0) + p * (170 ±0)`
        // Minimum execution time: 46_701 nanoseconds.
        Weight::from_parts(57_532_782, 7250)
            // Standard Error: 12_272
            .saturating_add(Weight::from_ref_time(80_343).saturating_mul(m.into()))
            // Standard Error: 4_664
            .saturating_add(Weight::from_ref_time(222_944).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(4_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
            .saturating_add(Weight::from_proof_size(325).saturating_mul(m.into()))
            .saturating_add(Weight::from_proof_size(170).saturating_mul(p.into()))
    }
    /// Storage: AdvisoryCommittee Voting (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Members (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Members (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Prime (r:1 w:0)
    /// Proof Skipped: AdvisoryCommittee Prime (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Proposals (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    fn close_approved(b: u32, m: u32, p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `946 + b * (1 ±0) + m * (64 ±0) + p * (36 ±0)`
        //  Estimated: `11505 + b * (5 ±0) + m * (310 ±0) + p * (180 ±0)`
        // Minimum execution time: 68_280 nanoseconds.
        Weight::from_parts(80_188_380, 11505)
            // Standard Error: 859
            .saturating_add(Weight::from_ref_time(6_867).saturating_mul(b.into()))
            // Standard Error: 9_080
            .saturating_add(Weight::from_ref_time(30_436).saturating_mul(m.into()))
            // Standard Error: 3_451
            .saturating_add(Weight::from_ref_time(275_589).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(5_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
            .saturating_add(Weight::from_proof_size(5).saturating_mul(b.into()))
            .saturating_add(Weight::from_proof_size(310).saturating_mul(m.into()))
            .saturating_add(Weight::from_proof_size(180).saturating_mul(p.into()))
    }
    /// Storage: AdvisoryCommittee Proposals (r:1 w:1)
    /// Proof Skipped: AdvisoryCommittee Proposals (max_values: Some(1), max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee Voting (r:0 w:1)
    /// Proof Skipped: AdvisoryCommittee Voting (max_values: None, max_size: None, mode: Measured)
    /// Storage: AdvisoryCommittee ProposalOf (r:0 w:1)
    /// Proof Skipped: AdvisoryCommittee ProposalOf (max_values: None, max_size: None, mode: Measured)
    fn disapprove_proposal(p: u32) -> Weight {
        // Proof Size summary in bytes:
        //  Measured:  `258 + p * (32 ±0)`
        //  Estimated: `1266 + p * (96 ±0)`
        // Minimum execution time: 29_360 nanoseconds.
        Weight::from_parts(34_319_904, 1266)
            // Standard Error: 3_679
            .saturating_add(Weight::from_ref_time(227_216).saturating_mul(p.into()))
            .saturating_add(T::DbWeight::get().reads(1_u64))
            .saturating_add(T::DbWeight::get().writes(3_u64))
            .saturating_add(Weight::from_proof_size(96).saturating_mul(p.into()))
    }
}

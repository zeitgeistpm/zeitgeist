//! Autogenerated weights for pallet_vesting
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-05-15, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/zeitgeist
// benchmark
// pallet
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_vesting
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --output=./runtime/src/weights/

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};

/// Weight functions for pallet_vesting (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_vesting::weights::WeightInfo for WeightInfo<T> {
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    fn vest_locked(l: u32, _s: u32) -> Weight {
        (79_755_000 as Weight)
            // Standard Error: 24_000
            .saturating_add((6_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(2 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    fn vest_unlocked(l: u32, s: u32) -> Weight {
        (64_826_000 as Weight)
            // Standard Error: 14_000
            .saturating_add((121_000 as Weight).saturating_mul(l as Weight))
            // Standard Error: 29_000
            .saturating_add((71_000 as Weight).saturating_mul(s as Weight))
            .saturating_add(T::DbWeight::get().reads(2 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    // Storage: System Account (r:1 w:1)
    fn vest_other_locked(l: u32, s: u32) -> Weight {
        (71_561_000 as Weight)
            // Standard Error: 20_000
            .saturating_add((59_000 as Weight).saturating_mul(l as Weight))
            // Standard Error: 40_000
            .saturating_add((25_000 as Weight).saturating_mul(s as Weight))
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    // Storage: System Account (r:1 w:1)
    fn vest_other_unlocked(l: u32, s: u32) -> Weight {
        (65_175_000 as Weight)
            // Standard Error: 16_000
            .saturating_add((25_000 as Weight).saturating_mul(l as Weight))
            // Standard Error: 34_000
            .saturating_add((185_000 as Weight).saturating_mul(s as Weight))
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: System Account (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    fn vested_transfer(l: u32, s: u32) -> Weight {
        (113_386_000 as Weight)
            // Standard Error: 43_000
            .saturating_add((69_000 as Weight).saturating_mul(l as Weight))
            // Standard Error: 88_000
            .saturating_add((56_000 as Weight).saturating_mul(s as Weight))
            .saturating_add(T::DbWeight::get().reads(3 as Weight))
            .saturating_add(T::DbWeight::get().writes(3 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: System Account (r:2 w:2)
    // Storage: Balances Locks (r:1 w:1)
    fn force_vested_transfer(l: u32, _s: u32) -> Weight {
        (112_952_000 as Weight)
            // Standard Error: 37_000
            .saturating_add((19_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(4 as Weight))
            .saturating_add(T::DbWeight::get().writes(4 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    fn not_unlocking_merge_schedules(l: u32, _s: u32) -> Weight {
        (75_222_000 as Weight)
            // Standard Error: 16_000
            .saturating_add((71_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(2 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    // Storage: Vesting Vesting (r:1 w:1)
    // Storage: Balances Locks (r:1 w:1)
    fn unlocking_merge_schedules(l: u32, _s: u32) -> Weight {
        (73_942_000 as Weight)
            // Standard Error: 23_000
            .saturating_add((187_000 as Weight).saturating_mul(l as Weight))
            .saturating_add(T::DbWeight::get().reads(2 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
}

//! Autogenerated weights for pallet_democracy
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-03-23, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:// ./target/release/zeitgeist// benchmark// --chain=dev// --steps=50// --repeat=20// --pallet=pallet_democracy// --extrinsic=*// --execution=wasm// --wasm-execution=compiled// --heap-pages=4096// --template=./misc/frame_weight_template.hbs// --output=./runtime/src/weights/
#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions for pallet_democracy (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_democracy::weights::WeightInfo for WeightInfo<T> {
		// Storage: Democracy PublicPropCount (r:1 w:1)
		// Storage: Democracy PublicProps (r:1 w:1)
		// Storage: Democracy Blacklist (r:1 w:0)
		// Storage: Democracy DepositOf (r:0 w:1)
	fn propose() -> Weight {
		(86_111_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
		// Storage: Democracy DepositOf (r:1 w:1)
	fn second(s: u32, ) -> Weight {
		(60_666_000 as Weight)		
		// Standard Error: 9_000

			.saturating_add((251_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Democracy VotingOf (r:1 w:1)
		// Storage: Balances Locks (r:1 w:1)
	fn vote_new(r: u32, ) -> Weight {
		(74_596_000 as Weight)		
		// Standard Error: 8_000

			.saturating_add((270_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Democracy VotingOf (r:1 w:1)
		// Storage: Balances Locks (r:1 w:1)
	fn vote_existing(r: u32, ) -> Weight {
		(77_477_000 as Weight)		
		// Standard Error: 8_000

			.saturating_add((210_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Democracy Cancellations (r:1 w:1)
	fn emergency_cancel() -> Weight {
		(38_750_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
		// Storage: Democracy PublicProps (r:1 w:1)
		// Storage: Democracy NextExternal (r:1 w:1)
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Democracy Blacklist (r:0 w:1)
		// Storage: Democracy DepositOf (r:1 w:1)
		// Storage: System Account (r:2 w:2)
	fn blacklist(p: u32, ) -> Weight {
		(123_210_000 as Weight)		
		// Standard Error: 16_000

			.saturating_add((537_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(6 as Weight))
			.saturating_add(T::DbWeight::get().writes(7 as Weight))
	}
		// Storage: Democracy NextExternal (r:1 w:1)
		// Storage: Democracy Blacklist (r:1 w:0)
	fn external_propose(v: u32, ) -> Weight {
		(24_756_000 as Weight)		
		// Standard Error: 2_000

			.saturating_add((117_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_majority() -> Weight {
		(4_280_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy NextExternal (r:0 w:1)
	fn external_propose_default() -> Weight {
		(3_720_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy NextExternal (r:1 w:1)
		// Storage: Democracy ReferendumCount (r:1 w:1)
		// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn fast_track() -> Weight {
		(39_540_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
		// Storage: Democracy NextExternal (r:1 w:1)
		// Storage: Democracy Blacklist (r:1 w:1)
	fn veto_external(v: u32, ) -> Weight {
		(41_471_000 as Weight)		
		// Standard Error: 6_000

			.saturating_add((170_000 as Weight).saturating_mul(v as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
		// Storage: Democracy PublicProps (r:1 w:1)
		// Storage: Democracy DepositOf (r:1 w:1)
		// Storage: System Account (r:2 w:2)
	fn cancel_proposal(p: u32, ) -> Weight {
		(89_197_000 as Weight)		
		// Standard Error: 11_000

			.saturating_add((560_000 as Weight).saturating_mul(p as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
		// Storage: Democracy ReferendumInfoOf (r:0 w:1)
	fn cancel_referendum() -> Weight {
		(30_050_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Scheduler Lookup (r:1 w:1)
		// Storage: Scheduler Agenda (r:1 w:1)
	fn cancel_queued(r: u32, ) -> Weight {
		(44_474_000 as Weight)		
		// Standard Error: 12_000

			.saturating_add((1_607_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
		// Storage: Democracy LowestUnbaked (r:1 w:1)
		// Storage: Democracy ReferendumCount (r:1 w:0)
		// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base(r: u32, ) -> Weight {
		(5_092_000 as Weight)		
		// Standard Error: 43_000

			.saturating_add((8_565_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy LowestUnbaked (r:1 w:1)
		// Storage: Democracy ReferendumCount (r:1 w:0)
		// Storage: Democracy LastTabledWasExternal (r:1 w:0)
		// Storage: Democracy NextExternal (r:1 w:0)
		// Storage: Democracy PublicProps (r:1 w:0)
		// Storage: Democracy ReferendumInfoOf (r:1 w:0)
	fn on_initialize_base_with_launch_period(r: u32, ) -> Weight {
		(19_325_000 as Weight)		
		// Standard Error: 44_000

			.saturating_add((8_669_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy VotingOf (r:3 w:3)
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Balances Locks (r:1 w:1)
	fn delegate(r: u32, ) -> Weight {
		(79_393_000 as Weight)		
		// Standard Error: 58_000

			.saturating_add((10_668_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
		// Storage: Democracy VotingOf (r:2 w:2)
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
	fn undelegate(r: u32, ) -> Weight {
		(29_023_000 as Weight)		
		// Standard Error: 51_000

			.saturating_add((10_778_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().reads((1 as Weight).saturating_mul(r as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((1 as Weight).saturating_mul(r as Weight)))
	}
		// Storage: Democracy PublicProps (r:0 w:1)
	fn clear_public_proposals() -> Weight {
		(4_280_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy Preimages (r:1 w:1)
	fn note_preimage(b: u32, ) -> Weight {
		(65_302_000 as Weight)		
		// Standard Error: 0

			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy Preimages (r:1 w:1)
	fn note_imminent_preimage(b: u32, ) -> Weight {
		(43_078_000 as Weight)		
		// Standard Error: 0

			.saturating_add((3_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy Preimages (r:1 w:1)
		// Storage: System Account (r:1 w:0)
	fn reap_preimage(b: u32, ) -> Weight {
		(58_136_000 as Weight)		
		// Standard Error: 0

			.saturating_add((1_000 as Weight).saturating_mul(b as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
		// Storage: Democracy VotingOf (r:1 w:1)
		// Storage: Balances Locks (r:1 w:1)
		// Storage: System Account (r:1 w:1)
	fn unlock_remove(r: u32, ) -> Weight {
		(46_774_000 as Weight)		
		// Standard Error: 5_000

			.saturating_add((135_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
		// Storage: Democracy VotingOf (r:1 w:1)
		// Storage: Balances Locks (r:1 w:1)
		// Storage: System Account (r:1 w:1)
	fn unlock_set(r: u32, ) -> Weight {
		(47_613_000 as Weight)		
		// Standard Error: 6_000

			.saturating_add((248_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_vote(r: u32, ) -> Weight {
		(27_105_000 as Weight)		
		// Standard Error: 4_000

			.saturating_add((222_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
		// Storage: Democracy ReferendumInfoOf (r:1 w:1)
		// Storage: Democracy VotingOf (r:1 w:1)
	fn remove_other_vote(r: u32, ) -> Weight {
		(28_590_000 as Weight)		
		// Standard Error: 4_000

			.saturating_add((212_000 as Weight).saturating_mul(r as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}}

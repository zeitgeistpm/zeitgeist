//! Autogenerated weights for pallet_membership
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2021-11-27, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/zeitgeist
// benchmark
// --chain=dev
// --steps=50
// --repeat=20
// --pallet=pallet_membership
// --extrinsic=*
// --execution=wasm
// --wasm-execution=compiled
// --heap-pages=4096
// --template=./misc/frame_weight_template.hbs
// --output=./runtime/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;

/// Weight functions for pallet_membership (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_membership::weights::WeightInfo for WeightInfo<T> {
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn add_member(m: u32, ) -> Weight {
		(56_520_000 as Weight)
			// Standard Error: 13_000
			.saturating_add((326_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(2 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn remove_member(m: u32, ) -> Weight {
		(70_295_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((201_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn swap_member(m: u32, ) -> Weight {
		(72_619_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((209_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:0)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn reset_member(m: u32, ) -> Weight {
		(75_546_000 as Weight)
			// Standard Error: 6_000
			.saturating_add((525_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:1)
	// Storage: Instance1Collective Proposals (r:1 w:0)
	// Storage: Instance1Membership Prime (r:1 w:1)
	// Storage: Instance1Collective Members (r:0 w:1)
	// Storage: Instance1Collective Prime (r:0 w:1)
	fn change_key(m: u32, ) -> Weight {
		(77_358_000 as Weight)
			// Standard Error: 5_000
			.saturating_add((147_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	// Storage: Instance1Membership Members (r:1 w:0)
	// Storage: Instance1Collective Prime (r:0 w:1)
	// Storage: Instance1Membership Prime (r:0 w:1)
	fn set_prime(m: u32, ) -> Weight {
		(19_492_000 as Weight)
			// Standard Error: 1_000
			.saturating_add((154_000 as Weight).saturating_mul(m as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
	// Storage: Instance1Collective Prime (r:0 w:1)
	// Storage: Instance1Membership Prime (r:0 w:1)
	fn clear_prime(_m: u32, ) -> Weight {
		(8_149_000 as Weight)
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
	}
}

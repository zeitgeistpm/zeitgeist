//! Autogenerated weights for zrml_liquidity_mining
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-08-20, STEPS: `[8, ]`, REPEAT: 5000, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// target/release/zeitgeist
// benchmark
// --chain
// dev
// --execution
// wasm
// --extrinsic
// *
// --output
// ./zrml/liquidity-mining/src/weights.rs
// --pallet
// zrml-liquidity-mining
// --repeat
// 5000
// --steps
// 8
// --template
// ./misc/weight_template.hbs
// --wasm-execution
// compiled

#![allow(unused_parens)]
#![allow(unused_imports)]

use core::marker::PhantomData;
use frame_support::{traits::Get, weights::Weight};

///  Trait containing the required functions for weight retrival within
/// zrml_liquidity_mining (automatically generated)
pub trait WeightInfoZeitgeist {
    fn set_per_block_distribution() -> Weight;
}

/// Weight functions for zrml_liquidity_mining (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfoZeitgeist for WeightInfo<T> {
    fn set_per_block_distribution() -> Weight {
        (2_104_000 as Weight).saturating_add(T::DbWeight::get().writes(1 as Weight))
    }
}

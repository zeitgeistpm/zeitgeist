[dependencies]
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
orml-traits = { workspace = true }
parity-scale-codec = { workspace = true, features = ["derive", "max-encoded-len"] }
sp-runtime = { workspace = true }
substrate-fixed = { workspace = true }
zeitgeist-primitives = { workspace = true }
zrml-liquidity-mining = { workspace = true }
zrml-market-commons = { workspace = true }
zrml-rikiddo = { workspace = true }

# Mock

orml-currencies = { workspace = true, optional = true }
orml-tokens = { workspace = true, optional = true }
pallet-balances = { workspace = true, optional = true }
pallet-timestamp = { workspace = true, optional = true }
sp-api = { workspace = true, optional = true }
sp-io = { workspace = true, optional = true }
zrml-swaps-runtime-api = { workspace = true, optional = true }

[dev-dependencies]
more-asserts = "0.2"
test-case = "2.0.2"
zrml-swaps = { workspace = true, features = ["mock"] }

[features]
default = ["std"]
mock = [
    "orml-currencies",
    "orml-tokens",
    "pallet-balances",
    "pallet-timestamp",
    "sp-api",
    "sp-io",
    "zeitgeist-primitives/mock",
    "zrml-swaps-runtime-api",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "frame-support/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
]
std = [
    "frame-benchmarking?/std",
    "frame-support/std",
    "frame-system/std",
    "orml-traits/std",
    "parity-scale-codec/std",
    "sp-runtime/std",
    "substrate-fixed/std",
    "zeitgeist-primitives/std",
    "zrml-market-commons/std",
    "zrml-liquidity-mining/std",
    "zrml-rikiddo/std",
]
try-runtime = [
    "frame-support/try-runtime",
]

[package]
authors = ["Zeitgeist PM <contact@zeitgeist.pm>"]
edition = "2021"
name = "zrml-swaps"
version = "0.3.10"

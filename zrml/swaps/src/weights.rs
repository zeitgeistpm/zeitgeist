
//! Autogenerated weights for zrml_swaps
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-06-17, STEPS: `[9, ]`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("local"), DB CACHE: 128

// Executed Command:
// ./target/release/zeitgeist
// benchmark
// --chain
// local
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// zrml-swaps
// --extrinsic
// *
// --steps
// 9
// --repeat
// 10
// --template
// ./misc/weight_template.hbs
// --output
// ./zrml/swaps/src/weights.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::Weight};
use sp_std::marker::PhantomData;

///  Trait containing the required functions for weight retrival within
/// zrml_swaps (automatically generated)
pub trait WeightInfoZeitgeist {
	fn admin_set_pool_as_stale() -> Weight;
	fn create_pool(a: u32, ) -> Weight;
	fn pool_exit(a: u32, ) -> Weight;
	fn pool_exit_with_exact_asset_amount() -> Weight;
	fn pool_exit_with_exact_pool_amount() -> Weight;
	fn pool_join(a: u32, ) -> Weight;
	fn pool_join_with_exact_asset_amount() -> Weight;
	fn pool_join_with_exact_pool_amount() -> Weight;
	fn swap_exact_amount_in() -> Weight;
	fn swap_exact_amount_out() -> Weight;
}

/// Weight functions for zrml_swaps (automatically generated)
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfoZeitgeist for WeightInfo<T> {
	fn admin_set_pool_as_stale() -> Weight {
		(40_800_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn create_pool(a: u32, ) -> Weight {
		(127_406_000 as Weight)
			// Standard Error: 316_000
			.saturating_add((91_342_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes(5 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn pool_exit(a: u32, ) -> Weight {
		(99_986_000 as Weight)
			// Standard Error: 168_000
			.saturating_add((92_064_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(4 as Weight))
			.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes(3 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn pool_exit_with_exact_asset_amount() -> Weight {
		(177_101_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn pool_exit_with_exact_pool_amount() -> Weight {
		(176_701_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn pool_join(a: u32, ) -> Weight {
		(90_075_000 as Weight)
			// Standard Error: 122_000
			.saturating_add((86_826_000 as Weight).saturating_mul(a as Weight))
			.saturating_add(T::DbWeight::get().reads(3 as Weight))
			.saturating_add(T::DbWeight::get().reads((2 as Weight).saturating_mul(a as Weight)))
			.saturating_add(T::DbWeight::get().writes(2 as Weight))
			.saturating_add(T::DbWeight::get().writes((2 as Weight).saturating_mul(a as Weight)))
	}
	fn pool_join_with_exact_asset_amount() -> Weight {
		(181_101_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn pool_join_with_exact_pool_amount() -> Weight {
		(180_301_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn swap_exact_amount_in() -> Weight {
		(255_302_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
	fn swap_exact_amount_out() -> Weight {
		(254_602_000 as Weight)
			.saturating_add(T::DbWeight::get().reads(5 as Weight))
			.saturating_add(T::DbWeight::get().writes(4 as Weight))
	}
}
